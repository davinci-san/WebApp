!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=15)}([function(e,t,n){"use strict";e.exports=n(16)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.delete_request=t.put_request=t.post_request=t.get_request=void 0;var r,o=n(11),i=(r=o)&&r.__esModule?r:{default:r};var a=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];return new Promise(function(a,l){var u=new XMLHttpRequest;u.onload=function(e){200==e.target.status?a(JSON.parse(e.target.response)):l(e)};var s=n.map(function(e){return e.key+"="+e.value}).join("&");u.open(e,i.default.api+t+"?"+s);for(var c=0;c<o.length;c++)u.setRequestHeader(o[c].key,o[c].value);u.send(r)})};t.get_request=function(e,t){return new Promise(function(n,r){a("GET",e,t).then(function(e){n(e)},function(e){r(e)})})},t.post_request=function(e,t,n,r){return new Promise(function(o,i){a("POST",e,[{key:"user_token",value:r}],t,n).then(function(e){o(e)},function(e){i(e)})})},t.put_request=function(e,t,n,r){return new Promise(function(o,i){a("PUT",e,[{key:"user_token",value:r}],t,n).then(function(e){o(e)},function(e){i(e)})})},t.delete_request=function(e,t,n,r){return new Promise(function(o,i){a("DELETE",e,[{key:"user_token",value:r}],t,n).then(function(e){o(e)},function(e){i(e)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=t.APPEND_VIEW="APPEND_VIEW",o=(t.append_view=function(e){return{type:r,payload:{id:e}}},t.SWITCH_VIEW="SWITCH_VIEW"),i=(t.switch_view=function(e){return{type:o,payload:{id:e}}},t.APPEND_SECTION="APPEND_SECTION"),a=(t.append_section=function(e){return{type:i,payload:e}},t.SWITCH_SECTION="SWITCH_SECTION");t.switch_section=function(e){return{type:a,payload:{id:e}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.set_current_process=t.SET_CURRENT_PROCESS=t.edit_processes=t.EDIT_PROCESSES=t.edit_process=t.EDIT_PROCESS=t.remove_process=t.REMOVE_PROCESS=t.new_process=t.FINALIZE_NEW_PROCESS=t.INITIATE_NEW_PROCESS=t.fetch_processes=t.FINALIZE_FETCH_PROCESSES=t.INITIATE_FETCH_PROCESSES=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(35));var o=t.INITIATE_FETCH_PROCESSES="INITIATE_FETCH_PROCESSES",i=t.FINALIZE_FETCH_PROCESSES="FINALIZE_FETCH_PROCESSES",a=(t.fetch_processes=function(e,t){return function(n){n({type:o});r.fetch_processes(e,t).then(function(e){n({type:i,payload:{elements:e}})},function(e){console.log(e)})}},t.INITIATE_NEW_PROCESS="INITIATE_NEW_PROCESS"),l=t.FINALIZE_NEW_PROCESS="FINALIZE_NEW_PROCESS",u=(t.new_process=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Untitled",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Description";return function(i){i({type:a});r.new_process(e,t,n,o).then(function(e){i({type:l,payload:{id:e._id,product_id:e.product_id,label:e.label,description:e.description,index:e.index}})},function(e){console.log(e)})}},t.REMOVE_PROCESS="REMOVE_PROCESS"),s=(t.remove_process=function(e,t){return function(n){n({type:u,payload:{id:t}}),r.delete_process(e,t).then(function(e){},function(e){console.log(e)})}},t.EDIT_PROCESS="EDIT_PROCESS"),c=(t.edit_process=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(o){o({type:s,payload:{id:t,info:n}}),r.edit_process(e,t,n).then(function(e){},function(e){console.log(e)})}},t.EDIT_PROCESSES="EDIT_PROCESSES"),d=(t.edit_processes=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[{}];return{type:c,payload:{ids:e,info:t}}},t.SET_CURRENT_PROCESS="SET_CURRENT_PROCESS");t.set_current_process=function(e){return{type:d,payload:{id:e}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sign_out=t.SIGN_OUT=t.sign_in=t.FINALIZE_SIGN_IN=t.FAIL_SIGN_IN=t.INITIATE_SIGN_IN=void 0;var r,o=n(11),i=((r=o)&&r.__esModule,function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(30)));var a=t.INITIATE_SIGN_IN="INITIATE_SIGN_IN",l=t.FAIL_SIGN_IN="FAIL_SIGN_IN",u=t.FINALIZE_SIGN_IN="FINALIZE_SIGN_IN",s=(t.sign_in=function(e,t){return function(n){n({type:a});i.fetch_user_token(e,t).then(function(e){n({type:u,payload:{token:e.user_token,info:{role:e.role}}})},function(e){n({type:l})})}},t.SIGN_OUT="SIGN_OUT");t.sign_out=function(e){return{type:s}}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o},u=n(2);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={active:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){var e=this;return l.default.createElement("div",{className:"view"+(this.state.active?" active":""),id:this.props.id},l.default.createElement("header",{className:"view-header"},l.default.createElement("div",{className:"label"},this.props.label),l.default.createElement("div",{className:"topbar-buttons"},null!=this.props.add&&l.default.createElement("div",{className:"topbar-button add"+(this.props.creating?" creating":""),onClick:function(t){e.props.creating||e.props.add()}},!this.props.creating&&l.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},l.default.createElement("use",{xlinkHref:"#icon-add"})),this.props.creating&&l.default.createElement("svg",{viewBox:"0 0 16 16",className:"inner"},l.default.createElement("use",{xlinkHref:"#icon-loading"}))),null!=this.props.edit&&l.default.createElement("div",{className:"topbar-button edit",onClick:this.props.edit.bind(this)},l.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},l.default.createElement("use",{xlinkHref:"#icon-edit"}))),null!=this.props.previous_view&&l.default.createElement("div",{className:"topbar-button close",onClick:this.close.bind(this)},l.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},l.default.createElement("use",{xlinkHref:"#icon-close"}))))),l.default.createElement("div",{className:"view-body"+(this.props.fetching?" loading":""),onMouseMove:this.props.onMouseMove},this.props.children,l.default.createElement("div",{className:"loader"},l.default.createElement("svg",{viewBox:"0 0 16 16",className:"inner"},l.default.createElement("use",{xlinkHref:"#icon-loading"})))))}},{key:"close",value:function(){null!=this.props.close_callback&&this.props.close_callback(),this.props.store.dispatch((0,u.switch_view)(this.props.previous_view))}},{key:"onStoreChange",value:function(){var e=this.props.store.getState().navigation.current_view==this.props.id;this.setState({active:e})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),this.onStoreChange()}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.set_current_product=t.SET_CURRENT_PRODUCT=t.edit_product=t.EDIT_PRODUCT=t.remove_product=t.REMOVE_PRODUCT=t.new_product=t.FINALIZE_NEW_PRODUCT=t.INITIATE_NEW_PRODUCT=t.fetch_products=t.FINALIZE_FETCH_PRODUCTS=t.INITIATE_FETCH_PRODUCTS=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(34));var o=t.INITIATE_FETCH_PRODUCTS="INITIATE_FETCH_PRODUCTS",i=t.FINALIZE_FETCH_PRODUCTS="FINALIZE_FETCH_PRODUCTS",a=(t.fetch_products=function(e){return function(t){t({type:o});r.fetch_products(e).then(function(e){var n=e.map(function(e){return{id:e._id,label:e.label,description:e.description}});t({type:i,payload:{elements:n}})},function(e){})}},t.INITIATE_NEW_PRODUCT="INITIATE_NEW_PRODUCT"),l=t.FINALIZE_NEW_PRODUCT="FINALIZE_NEW_PRODUCT",u=(t.new_product=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return function(o){o({type:a});r.new_product(e,t,n).then(function(e){o({type:l,payload:{id:e._id,label:e.label,description:e.description}})},function(e){console.log(e)})}},t.REMOVE_PRODUCT="REMOVE_PRODUCT"),s=(t.remove_product=function(e,t){return function(n){r.delete_product(e,t).then(function(e){},function(e){console.log(e)}),n({type:u,payload:{id:t}})}},t.EDIT_PRODUCT="EDIT_PRODUCT"),c=(t.edit_product=function(e,t,n){return function(o){r.edit_product(e,t,n).then(function(e){},function(e){console.log(e)}),o({type:s,payload:{id:t,info:n}})}},t.SET_CURRENT_PRODUCT="SET_CURRENT_PRODUCT");t.set_current_product=function(e){return{type:c,payload:{id:e}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_property=t.EDIT_PROPERTY=t.remove_property=t.REMOVE_PROPERTY=t.add_property=t.FINALIZE_ADD_PROPERTY=t.INITIATE_ADD_PROPERTY=t.fetch_properties=t.FINALIZE_FETCH_PROPERTIES=t.INITIATE_FETCH_PROPERTIES=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(37));var o=t.INITIATE_FETCH_PROPERTIES="INITIATE_FETCH_PROPERTIES",i=t.FINALIZE_FETCH_PROPERTIES="FINALIZE_FETCH_PROPERTIES",a=(t.fetch_properties=function(e,t){return function(n){n({type:o});r.fetch_properties(e,t).then(function(e){n({type:i,payload:{elements:e}})},function(e){console.log(e)})}},t.INITIATE_ADD_PROPERTY="INITIATE_ADD_PROPERTY"),l=t.FINALIZE_ADD_PROPERTY="FINALIZE_ADD_PROPERTY",u=(t.add_property=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Untitled",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Value";return function(i){i({type:a});r.new_property(e,t,n,o).then(function(e){console.log(e),i({type:l,payload:{id:e._id,process_id:e.process_id,label:e.label,value:e.value}})},function(e){console.log(e)})}},t.REMOVE_PROPERTY="REMOVE_PROPERTY"),s=(t.remove_property=function(e,t){return function(n){n({type:u,payload:{id:t}}),r.delete_property(e,t).then(function(e){},function(e){console.log(e)})}},t.EDIT_PROPERTY="EDIT_PROPERTY");t.edit_property=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(o){o({type:s,payload:{id:t,info:n}}),r.edit_property(e,t,n).then(function(e){},function(e){console.log(e)})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.remove_step=t.REMOVE_STEP=t.edit_step=t.EDIT_STEP=t.add_step=t.FINALIZE_ADD_STEP=t.INITIATE_ADD_STEP=t.fetch_steps=t.FINALIZE_FETCH_STEPS=t.INITIATE_FETCH_STEPS=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(38));var o=t.INITIATE_FETCH_STEPS="INITIATE_FETCH_STEPS",i=t.FINALIZE_FETCH_STEPS="FINALIZE_FETCH_STEP",a=(t.fetch_steps=function(e,t){return function(n){n({type:o});r.fetch_steps(e,t).then(function(e){n({type:i,payload:{elements:e}})},function(e){console.log(e)})}},t.INITIATE_ADD_STEP="INITIATE_ADD_STEP"),l=t.FINALIZE_ADD_STEP="FINALIZE_ADD_STEP",u=(t.add_step=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Untitled";return function(o){o({type:a});r.new_step(e,t,n).then(function(e){console.log(e),o({type:l,payload:{id:e._id,process_id:e.process_id,label:e.label,index:e.index}})},function(e){console.log(e)})}},t.EDIT_STEP="EDIT_STEP"),s=(t.edit_step=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(o){o({type:u,payload:{id:t,info:n}}),r.edit_step(e,t,n).then(function(e){},function(e){console.log(e)})}},t.REMOVE_STEP="REMOVE_STEP");t.remove_step=function(e,t){return function(n){n({type:s,payload:{id:t}}),r.delete_step(e,t).then(function(e){},function(e){console.log(e)})}}},function(e,t,n){"use strict";(function(e,r){var o,i=n(14);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n(45),n(46)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(u[c]=n[c]);if(r){l=r(n);for(var d=0;d<l.length;d++)i.call(n,l[d])&&(u[l[d]]=n[l[d]])}}return u}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={api:"http://127.0.0.1:3000/"}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o};var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={closed:!1,editing:null,removing:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){var e=this;return l.default.createElement("div",{className:"grid"+(this.state.closed?" closed":""),id:this.props.id},this.props.fetching&&l.default.createElement("div",{className:"loader"},l.default.createElement("svg",{viewBox:"0 0 16 16"},l.default.createElement("use",{xlinkHref:"#icon-loading"}))),l.default.createElement("div",{className:"grid-header",onClick:function(t){return e.toggle()}},l.default.createElement("div",{className:"label"},this.props.elements.length>0&&this.props.params.label,0==this.props.elements.length&&this.props.params.empty_label),l.default.createElement("svg",{className:"closed-icon",viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-chevron-up"})),l.default.createElement("div",{className:"add-new",onClick:this.add.bind(this)},!this.props.creating&&l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-add"})),this.props.creating&&l.default.createElement("svg",{viewBox:"0 0 16 16",className:"loader"},l.default.createElement("use",{xlinkHref:"#icon-loading"})))),l.default.createElement("div",{className:"grid-body"},l.default.createElement("div",{className:"grid-body-inner"},this.props.elements.length>0&&this.props.elements.map(function(t,n){return l.default.createElement("div",{className:"grid-element",key:"grid-elemement-"+e.props.id+"#"+t.id},e.state.editing!=t.id&&l.default.createElement("div",{className:"fields"+(e.props.numbered?" numbered":"")+(e.props.single?" single":"")},e.props.numbered&&l.default.createElement("div",{className:"number"},"#",n+1),l.default.createElement("div",{className:"label"},t.label),!e.props.single&&l.default.createElement("div",{className:"value"},t.value)),e.state.editing==t.id&&l.default.createElement("div",{className:"fields editing"+(e.props.numbered?" numbered":"")+(e.props.single?" single":"")},e.props.numbered&&l.default.createElement("div",{className:"number"},"#",n+1),l.default.createElement("div",{className:"label"},l.default.createElement("input",{className:"process-property-label",placeholder:"Fx. Temperature.",onKeyDown:function(n){13==n.keyCode&&e.save(n,t)}})),!e.props.single&&l.default.createElement("div",{className:"value"},l.default.createElement("input",{className:"process-property-value",placeholder:"Fx. 800 °C.",onKeyDown:function(n){13==n.keyCode&&e.save(n,t)}}))),l.default.createElement("div",{className:"action-buttons"},e.state.deleting!=t.id&&l.default.createElement("div",{className:"action-button remove",onClick:function(n){n.stopPropagation(),e.setState({deleting:t.id}),clearTimeout(e.deletion_to),e.deletion_to=setTimeout(function(t){e.setState({deleting:null})},1500)}},l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-delete"}))),e.state.deleting==t.id&&l.default.createElement("div",{className:"action-button remove",onClick:function(n){clearTimeout(e.deletion_to),e.remove(n,t)}},l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-accept"}))),e.state.editing!=t.id&&l.default.createElement("div",{className:"action-button edit",onClick:function(n){return e.edit(n,t)}},l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-edit"}))),e.state.editing==t.id&&l.default.createElement("div",{className:"action-button save",onClick:function(n){return e.save(n,t)}},l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-save"})))))}))))}},{key:"componentDidUpdate",value:function(){this.resize()}},{key:"toggle",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:!this.state.closed;this.setState({closed:t},function(t){e.resize()})}},{key:"resize",value:function(){var e=document.getElementById(this.props.id),t=document.querySelectorAll("#"+this.props.id+" .grid-body")[0],n=t.children[0];if(this.state.closed)e.style.height="64px",t.style.height="0px";else{var r=window.getComputedStyle(n);e.style.height=parseInt(r.height)+64+"px",t.style.height=r.height}}},{key:"edit",value:function(e,t){var n=this;e.stopPropagation(),this.setState({editing:t.id},function(e){var r=document.querySelectorAll("#"+n.props.id+" .process-property-label")[0],o=document.querySelectorAll("#"+n.props.id+" .process-property-value")[0];r.value=t.label,null!=o&&(o.value=t.value),r.focus()})}},{key:"add",value:function(e,t){e.stopPropagation(),null!=this.props.addCb&&this.props.addCb(t),this.toggle(!1)}},{key:"save",value:function(e,t){e.stopPropagation();var n=document.querySelectorAll("#"+this.props.id+" .process-property-label")[0],r=document.querySelectorAll("#"+this.props.id+" .process-property-value")[0];null!=this.props.saveCb&&this.props.saveCb(t,n.value,null!=r?r.value:null),this.setState({editing:null})}},{key:"remove",value:function(e,t){e.stopPropagation(),null!=this.props.removeCb&&this.props.removeCb(t)}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=t.ADD_NOTE="ADD_NOTE",o=(t.add_note=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Untitled",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"No content";return{type:r,payload:{pid:e,label:n,content:o}}},t.REMOVE_NOTE="REMOVE_NOTE");t.remove_note=function(e){return{type:o,payload:{id:e}}}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=l(n(0)),o=l(n(17)),i=l(n(21)),a=n(43);function l(e){return e&&e.__esModule?e:{default:e}}var u=document.getElementById("root");o.default.render(r.default.createElement(i.default,{store:a.store}),u)},function(e,t,n){"use strict";
/** @license React v16.9.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(10),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.suspense_list"):60120,m=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116;o&&Symbol.for("react.fundamental"),o&&Symbol.for("react.responder");var b="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=e.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return e.message="Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},_={};function w(e,t,n){this.props=e,this.context=t,this.refs=_,this.updater=n||y}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=_,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw g(Error(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=w.prototype;var k=x.prototype=new E;k.constructor=x,r(k,w.prototype),k.isPureReactComponent=!0;var T={current:null},S={suspense:null},C={current:null},P=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)P.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:C.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var R=/\/+/g,j=[];function M(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function D(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function A(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+z(l=t[s],s);u+=e(l,c,r,o)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=b&&t[b]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)u+=e(l=l.value,c=n+z(l,s++),r,o);else if("object"===l)throw r=""+t,g(Error(31),"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function U(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,function(e){return e}):null!=e&&(I(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),A(e,U,t=M(t,i,r,o)),D(t)}function H(){var e=T.current;if(null===e)throw g(Error(321));return e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;A(e,F,t=M(null,null,t,n)),D(t)},count:function(e){return A(e,function(){return null},null)},toArray:function(e){var t=[];return L(e,t,null,function(e){return e}),t},only:function(e){if(!I(e))throw g(Error(143));return e}},createRef:function(){return{current:null}},Component:w,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:f,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return H().useCallback(e,t)},useContext:function(e,t){return H().useContext(e,t)},useEffect:function(e,t){return H().useEffect(e,t)},useImperativeHandle:function(e,t,n){return H().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return H().useLayoutEffect(e,t)},useMemo:function(e,t){return H().useMemo(e,t)},useReducer:function(e,t,n){return H().useReducer(e,t,n)},useRef:function(e){return H().useRef(e)},useState:function(e){return H().useState(e)},Fragment:l,Profiler:s,StrictMode:u,Suspense:p,unstable_SuspenseList:h,createElement:N,cloneElement:function(e,t,n){if(null==e)throw g(Error(267),e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=C.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)P.call(t,o)&&!O.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){c=Array(o);for(var d=0;d<o;d++)c[d]=arguments[d+2];a.children=c}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:s}},createFactory:function(e){var t=N.bind(null,e);return t.type=e,t},isValidElement:I,version:"16.9.0",unstable_withSuspenseConfig:function(e,t){var n=S.suspense;S.suspense=void 0===t?null:t;try{e()}finally{S.suspense=n}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentBatchConfig:S,ReactCurrentOwner:C,IsSomeRendererActing:{current:!1},assign:r}},B={default:W},V=B&&W||B;e.exports=V.default||V},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(18)},function(e,t,n){"use strict";
/** @license React v16.9.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(10),i=n(19);function a(e){for(var t=e.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return e.message="Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}if(!r)throw a(Error(227));var l=null,u={};function s(){if(l)for(var e in u){var t=u[e],n=l.indexOf(e);if(!(-1<n))throw a(Error(96),e);if(!d[n]){if(!t.extractEvents)throw a(Error(97),e);for(var r in d[n]=t,n=t.eventTypes){var o=void 0,i=n[r],s=t,p=r;if(f.hasOwnProperty(p))throw a(Error(99),p);f[p]=i;var h=i.phasedRegistrationNames;if(h){for(o in h)h.hasOwnProperty(o)&&c(h[o],s,p);o=!0}else i.registrationName?(c(i.registrationName,s,p),o=!0):o=!1;if(!o)throw a(Error(98),r,e)}}}}function c(e,t,n){if(p[e])throw a(Error(100),e);p[e]=t,h[e]=t.eventTypes[n].dependencies}var d=[],f={},p={},h={};function m(e,t,n,r,o,i,a,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var v=!1,b=null,g=!1,y=null,_={onError:function(e){v=!0,b=e}};function w(e,t,n,r,o,i,a,l,u){v=!1,b=null,m.apply(_,arguments)}var E=null,x=null,k=null;function T(e,t,n){var r=e.type||"unknown-event";e.currentTarget=k(n),function(e,t,n,r,o,i,l,u,s){if(w.apply(this,arguments),v){if(!v)throw a(Error(198));var c=b;v=!1,b=null,g||(g=!0,y=c)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){if(null==t)throw a(Error(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var P=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)T(e,t[r],n[r]);else t&&T(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function N(e){if(null!==e&&(P=S(P,e)),e=P,P=null,e){if(C(e,O),P)throw a(Error(95));if(g)throw e=y,g=!1,y=null,e}}var I={injectEventPluginOrder:function(e){if(l)throw a(Error(101));l=Array.prototype.slice.call(e),s()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!u.hasOwnProperty(t)||u[t]!==r){if(u[t])throw a(Error(102),t);u[t]=r,n=!0}}n&&s()}};function R(e,t){var n=e.stateNode;if(!n)return null;var r=E(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw a(Error(231),t,typeof n);return n}var j=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+j,D="__reactEventHandlers$"+j;function A(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function z(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function F(e){if(5===e.tag||6===e.tag)return e.stateNode;throw a(Error(33))}function U(e){return e[D]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function H(e,t,n){(t=R(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)H(n[t],"captured",e);for(t=0;t<n.length;t++)H(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=R(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function q(e){C(e,W)}var Y=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement);function Q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $={animationend:Q("Animation","AnimationEnd"),animationiteration:Q("Animation","AnimationIteration"),animationstart:Q("Animation","AnimationStart"),transitionend:Q("Transition","TransitionEnd")},Z={},K={};function G(e){if(Z[e])return Z[e];if(!$[e])return e;var t,n=$[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Z[e]=n[t];return e}Y&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete $.animationend.animation,delete $.animationiteration.animation,delete $.animationstart.animation),"TransitionEvent"in window||delete $.transitionend.transition);var X=G("animationend"),J=G("animationiteration"),ee=G("animationstart"),te=G("transitionend"),ne="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),re=null,oe=null,ie=null;function ae(){if(ie)return ie;var e,t,n=oe,r=n.length,o="value"in re?re.value:re.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return ie=o.slice(e,1<t?1-t:void 0)}function le(){return!0}function ue(){return!1}function se(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?le:ue,this.isPropagationStopped=ue,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function de(e){if(!(e instanceof this))throw a(Error(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=de}o(se.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=le)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=le)},persist:function(){this.isPersistent=le},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),se.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},se.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(se);var pe=se.extend({data:null}),he=se.extend({data:null}),me=[9,13,27,32],ve=Y&&"CompositionEvent"in window,be=null;Y&&"documentMode"in document&&(be=document.documentMode);var ge=Y&&"TextEvent"in window&&!be,ye=Y&&(!ve||be&&8<be&&11>=be),_e=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ee=!1;function xe(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ke(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Te=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(ve)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Te?xe(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ye&&"ko"!==n.locale&&(Te||o!==we.compositionStart?o===we.compositionEnd&&Te&&(i=ae()):(oe="value"in(re=r)?re.value:re.textContent,Te=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=ke(n))&&(o.data=i),q(o),i=o):i=null,(e=ge?function(e,t){switch(e){case"compositionend":return ke(t);case"keypress":return 32!==t.which?null:(Ee=!0,_e);case"textInput":return(e=t.data)===_e&&Ee?null:e;default:return null}}(e,n):function(e,t){if(Te)return"compositionend"===e||!ve&&xe(e,t)?(e=ae(),ie=oe=re=null,Te=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ye&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=he.getPooled(we.beforeInput,t,n,r)).data=e,q(t)):t=null,null===i?t:null===t?i:[i,t]}},Ce=null,Pe=null,Oe=null;function Ne(e){if(e=x(e)){if("function"!=typeof Ce)throw a(Error(280));var t=E(e.stateNode);Ce(e.stateNode,e.type,t)}}function Ie(e){Pe?Oe?Oe.push(e):Oe=[e]:Pe=e}function Re(){if(Pe){var e=Pe,t=Oe;if(Oe=Pe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function je(e,t){return e(t)}function Me(e,t,n,r){return e(t,n,r)}function De(){}var Ae=je,ze=!1;function Fe(){null===Pe&&null===Oe||(De(),Re())}var Ue={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Le(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ue[e.type]:"textarea"===t}function He(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function We(e){if(!Y)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function qe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ye=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ye.hasOwnProperty("ReactCurrentDispatcher")||(Ye.ReactCurrentDispatcher={current:null}),Ye.hasOwnProperty("ReactCurrentBatchConfig")||(Ye.ReactCurrentBatchConfig={suspense:null});var Qe=/^(.*)[\\\/]/,$e="function"==typeof Symbol&&Symbol.for,Ze=$e?Symbol.for("react.element"):60103,Ke=$e?Symbol.for("react.portal"):60106,Ge=$e?Symbol.for("react.fragment"):60107,Xe=$e?Symbol.for("react.strict_mode"):60108,Je=$e?Symbol.for("react.profiler"):60114,et=$e?Symbol.for("react.provider"):60109,tt=$e?Symbol.for("react.context"):60110,nt=$e?Symbol.for("react.concurrent_mode"):60111,rt=$e?Symbol.for("react.forward_ref"):60112,ot=$e?Symbol.for("react.suspense"):60113,it=$e?Symbol.for("react.suspense_list"):60120,at=$e?Symbol.for("react.memo"):60115,lt=$e?Symbol.for("react.lazy"):60116;$e&&Symbol.for("react.fundamental"),$e&&Symbol.for("react.responder");var ut="function"==typeof Symbol&&Symbol.iterator;function st(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=ut&&e[ut]||e["@@iterator"])?e:null}function ct(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case Ge:return"Fragment";case Ke:return"Portal";case Je:return"Profiler";case Xe:return"StrictMode";case ot:return"Suspense";case it:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case tt:return"Context.Consumer";case et:return"Context.Provider";case rt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case at:return ct(e.type);case lt:if(e=1===e._status?e._result:null)return ct(e)}return null}function dt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ct(e.type);n=null,r&&(n=ct(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Qe,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ft=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pt=Object.prototype.hasOwnProperty,ht={},mt={};function vt(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var bt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){bt[e]=new vt(e,0,!1,e,null,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];bt[t]=new vt(t,1,!1,e[1],null,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){bt[e]=new vt(e,2,!1,e.toLowerCase(),null,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){bt[e]=new vt(e,2,!1,e,null,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){bt[e]=new vt(e,3,!1,e.toLowerCase(),null,!1)}),["checked","multiple","muted","selected"].forEach(function(e){bt[e]=new vt(e,3,!0,e,null,!1)}),["capture","download"].forEach(function(e){bt[e]=new vt(e,4,!1,e,null,!1)}),["cols","rows","size","span"].forEach(function(e){bt[e]=new vt(e,6,!1,e,null,!1)}),["rowSpan","start"].forEach(function(e){bt[e]=new vt(e,5,!1,e.toLowerCase(),null,!1)});var gt=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function _t(e,t,n,r){var o=bt.hasOwnProperty(t)?bt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!pt.call(mt,e)||!pt.call(ht,e)&&(ft.test(e)?mt[e]=!0:(ht[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function wt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Et(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=wt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function kt(e,t){null!=(t=t.checked)&&_t(e,"checked",t,!1)}function Tt(e,t){kt(e,t);var n=wt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ct(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ct(e,t.type,wt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function St(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ct(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(gt,yt);bt[t]=new vt(t,1,!1,e,null,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(gt,yt);bt[t]=new vt(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(gt,yt);bt[t]=new vt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)}),["tabIndex","crossOrigin"].forEach(function(e){bt[e]=new vt(e,1,!1,e.toLowerCase(),null,!1)}),bt.xlinkHref=new vt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach(function(e){bt[e]=new vt(e,1,!1,e.toLowerCase(),null,!0)});var Pt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ot(e,t,n){return(e=se.getPooled(Pt.change,e,t,n)).type="change",Ie(n),q(e),e}var Nt=null,It=null;function Rt(e){N(e)}function jt(e){if(qe(F(e)))return e}function Mt(e,t){if("change"===e)return t}var Dt=!1;function At(){Nt&&(Nt.detachEvent("onpropertychange",zt),It=Nt=null)}function zt(e){if("value"===e.propertyName&&jt(It))if(e=Ot(It,e,He(e)),ze)N(e);else{ze=!0;try{je(Rt,e)}finally{ze=!1,Fe()}}}function Ft(e,t,n){"focus"===e?(At(),It=n,(Nt=t).attachEvent("onpropertychange",zt)):"blur"===e&&At()}function Ut(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return jt(It)}function Lt(e,t){if("click"===e)return jt(t)}function Ht(e,t){if("input"===e||"change"===e)return jt(t)}Y&&(Dt=We("input")&&(!document.documentMode||9<document.documentMode));var Wt={eventTypes:Pt,_isInputEventSupported:Dt,extractEvents:function(e,t,n,r){var o=t?F(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Mt:Le(o)?Dt?i=Ht:(i=Ut,a=Ft):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return Ot(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ct(o,"number",o.value)}},Bt=se.extend({view:null,detail:null}),Vt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Vt[e])&&!!t[e]}function Yt(){return qt}var Qt=0,$t=0,Zt=!1,Kt=!1,Gt=Bt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Qt;return Qt=e.screenX,Zt?"mousemove"===e.type?e.screenX-t:0:(Zt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,Kt?"mousemove"===e.type?e.screenY-t:0:(Kt=!0,0)}}),Xt=Gt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},en={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?A(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(a=Gt,l=Jt.mouseLeave,u=Jt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Xt,l=Jt.pointerLeave,u=Jt.pointerEnter,s="pointer");var c=null==i?o:F(i);if(o=null==t?o:F(t),(e=a.getPooled(l,i,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,i&&r)e:{for(o=r,s=0,a=t=i;a;a=L(a))s++;for(a=0,u=o;u;u=L(u))a++;for(;0<s-a;)t=L(t),s--;for(;0<a-s;)o=L(o),a--;for(;s--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(s=i.alternate)||s!==o);)t.push(i),i=L(i);for(i=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)i.push(r),r=L(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=i.length;0<r--;)B(i[r],"captured",n);return[e,n]}};function tn(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var nn=Object.prototype.hasOwnProperty;function rn(e,t){if(tn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!nn.call(t,n[r])||!tn(e[n[r]],t[n[r]]))return!1;return!0}function on(e,t){return{responder:e,props:t}}function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function ln(e){if(2!==an(e))throw a(Error(188))}function un(e){if(!(e=function(e){var t=e.alternate;if(!t){if(3===(t=an(e)))throw a(Error(188));return 1===t?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return ln(o),e;if(i===r)return ln(o),t;i=i.sibling}throw a(Error(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw a(Error(189))}}if(n.alternate!==r)throw a(Error(190))}if(3!==n.tag)throw a(Error(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}new Map,new Map,new Set,new Map;var sn=se.extend({animationName:null,elapsedTime:null,pseudoElement:null}),cn=se.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),dn=Bt.extend({relatedTarget:null});function fn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}for(var pn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},hn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},mn=Bt.extend({key:function(e){if(e.key){var t=pn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=fn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?hn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yt,charCode:function(e){return"keypress"===e.type?fn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?fn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),vn=Gt.extend({dataTransfer:null}),bn=Bt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yt}),gn=se.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=Gt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),_n=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[X,"animationEnd",2],[J,"animationIteration",2],[ee,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[te,"transitionEnd",2],["waiting","waiting",2]],wn={},En={},xn=0;xn<_n.length;xn++){var kn=_n[xn],Tn=kn[0],Sn=kn[1],Cn=kn[2],Pn="on"+(Sn[0].toUpperCase()+Sn.slice(1)),On={phasedRegistrationNames:{bubbled:Pn,captured:Pn+"Capture"},dependencies:[Tn],eventPriority:Cn};wn[Sn]=On,En[Tn]=On}var Nn={eventTypes:wn,getEventPriority:function(e){return void 0!==(e=En[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=En[e];if(!o)return null;switch(e){case"keypress":if(0===fn(n))return null;case"keydown":case"keyup":e=mn;break;case"blur":case"focus":e=dn;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Gt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=bn;break;case X:case J:case ee:e=sn;break;case te:e=gn;break;case"scroll":e=Bt;break;case"wheel":e=yn;break;case"copy":case"cut":case"paste":e=cn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Xt;break;default:e=se}return q(t=e.getPooled(o,t,n,r)),t}},In=Nn.getEventPriority,Rn=[];function jn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=A(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=He(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<d.length;l++){var u=d[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=S(a,u))}N(a)}}var Mn=!0;function Dn(e,t){An(t,e,!1)}function An(e,t,n){switch(In(t)){case 0:var r=zn.bind(null,t,1);break;case 1:r=Fn.bind(null,t,1);break;default:r=Un.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function zn(e,t,n){ze||De();var r=Un,o=ze;ze=!0;try{Me(r,e,t,n)}finally{(ze=o)||Fe()}}function Fn(e,t,n){Un(e,t,n)}function Un(e,t,n){if(Mn){if(null===(t=A(t=He(n)))||"number"!=typeof t.tag||2===an(t)||(t=null),Rn.length){var r=Rn.pop();r.topLevelType=e,r.nativeEvent=n,r.targetInst=t,e=r}else e={topLevelType:e,nativeEvent:n,targetInst:t,ancestors:[]};try{if(n=e,ze)jn(n);else{ze=!0;try{Ae(jn,n,void 0)}finally{ze=!1,Fe()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Rn.length&&Rn.push(e)}}}var Ln=new("function"==typeof WeakMap?WeakMap:Map);function Hn(e){var t=Ln.get(e);return void 0===t&&(t=new Set,Ln.set(e,t)),t}function Wn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Bn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Vn(e,t){var n,r=Bn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Bn(r)}}function qn(){for(var e=window,t=Wn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Wn((e=t.contentWindow).document)}return t}function Yn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Qn=Y&&"documentMode"in document&&11>=document.documentMode,$n={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Zn=null,Kn=null,Gn=null,Xn=!1;function Jn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Xn||null==Zn||Zn!==Wn(n)?null:("selectionStart"in(n=Zn)&&Yn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Gn&&rn(Gn,n)?null:(Gn=n,(e=se.getPooled($n.select,Kn,e,t)).type="select",e.target=Zn,q(e),e))}var er={eventTypes:$n,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Hn(i),o=h.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?F(t):window,e){case"focus":(Le(i)||"true"===i.contentEditable)&&(Zn=i,Kn=t,Gn=null);break;case"blur":Gn=Kn=Zn=null;break;case"mousedown":Xn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Xn=!1,Jn(n,r);case"selectionchange":if(Qn)break;case"keydown":case"keyup":return Jn(n,r)}return null}};function tr(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function nr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+wt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function rr(e,t){if(null!=t.dangerouslySetInnerHTML)throw a(Error(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function or(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw a(Error(92));if(Array.isArray(t)){if(!(1>=t.length))throw a(Error(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:wt(n)}}function ir(e,t){var n=wt(t.value),r=wt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ar(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}I.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),E=U,x=z,k=F,I.injectEventPluginsByName({SimpleEventPlugin:Nn,EnterLeaveEventPlugin:en,ChangeEventPlugin:Wt,SelectEventPlugin:er,BeforeInputEventPlugin:Se});var lr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function ur(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function sr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ur(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var cr=void 0,dr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==lr.svg||"innerHTML"in e)e.innerHTML=t;else{for((cr=cr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=cr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function fr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},hr=["Webkit","ms","Moz","O"];function mr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pr.hasOwnProperty(e)&&pr[e]?(""+t).trim():t+"px"}function vr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=mr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(pr).forEach(function(e){hr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pr[t]=pr[e]})});var br=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function gr(e,t){if(t){if(br[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw a(Error(137),e,"");if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw a(Error(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw a(Error(61))}if(null!=t.style&&"object"!=typeof t.style)throw a(Error(62),"")}}function yr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _r(e,t){var n=Hn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=h[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.has(o)){switch(o){case"scroll":An(e,"scroll",!0);break;case"focus":case"blur":An(e,"focus",!0),An(e,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":We(o)&&An(e,o,!0);break;case"invalid":case"submit":case"reset":break;default:-1===ne.indexOf(o)&&Dn(o,e)}n.add(o)}}}function wr(){}var Er=null,xr=null;function kr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Tr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Sr="function"==typeof setTimeout?setTimeout:void 0,Cr="function"==typeof clearTimeout?clearTimeout:void 0;function Pr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}new Set;var Or=[],Nr=-1;function Ir(e){0>Nr||(e.current=Or[Nr],Or[Nr]=null,Nr--)}function Rr(e,t){Or[++Nr]=e.current,e.current=t}var jr={},Mr={current:jr},Dr={current:!1},Ar=jr;function zr(e,t){var n=e.type.contextTypes;if(!n)return jr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Fr(e){return null!=(e=e.childContextTypes)}function Ur(e){Ir(Dr),Ir(Mr)}function Lr(e){Ir(Dr),Ir(Mr)}function Hr(e,t,n){if(Mr.current!==jr)throw a(Error(168));Rr(Mr,t),Rr(Dr,n)}function Wr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw a(Error(108),ct(t)||"Unknown",i);return o({},n,r)}function Br(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||jr,Ar=Mr.current,Rr(Mr,t),Rr(Dr,Dr.current),!0}function Vr(e,t,n){var r=e.stateNode;if(!r)throw a(Error(169));n?(t=Wr(e,t,Ar),r.__reactInternalMemoizedMergedChildContext=t,Ir(Dr),Ir(Mr),Rr(Mr,t)):Ir(Dr),Rr(Dr,n)}var qr=i.unstable_runWithPriority,Yr=i.unstable_scheduleCallback,Qr=i.unstable_cancelCallback,$r=i.unstable_shouldYield,Zr=i.unstable_requestPaint,Kr=i.unstable_now,Gr=i.unstable_getCurrentPriorityLevel,Xr=i.unstable_ImmediatePriority,Jr=i.unstable_UserBlockingPriority,eo=i.unstable_NormalPriority,to=i.unstable_LowPriority,no=i.unstable_IdlePriority,ro={},oo=void 0!==Zr?Zr:function(){},io=null,ao=null,lo=!1,uo=Kr(),so=1e4>uo?Kr:function(){return Kr()-uo};function co(){switch(Gr()){case Xr:return 99;case Jr:return 98;case eo:return 97;case to:return 96;case no:return 95;default:throw a(Error(332))}}function fo(e){switch(e){case 99:return Xr;case 98:return Jr;case 97:return eo;case 96:return to;case 95:return no;default:throw a(Error(332))}}function po(e,t){return e=fo(e),qr(e,t)}function ho(e,t,n){return e=fo(e),Yr(e,t,n)}function mo(e){return null===io?(io=[e],ao=Yr(Xr,bo)):io.push(e),ro}function vo(){null!==ao&&Qr(ao),bo()}function bo(){if(!lo&&null!==io){lo=!0;var e=0;try{var t=io;po(99,function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}}),io=null}catch(t){throw null!==io&&(io=io.slice(e+1)),Yr(Xr,vo),t}finally{lo=!1}}}function go(e,t){return 1073741823===t?99:1===t?95:0>=(e=10*(1073741821-t)-10*(1073741821-e))?99:250>=e?98:5250>=e?97:95}function yo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var _o={current:null},wo=null,Eo=null,xo=null;function ko(){xo=Eo=wo=null}function To(e,t){var n=e.type._context;Rr(_o,n._currentValue),n._currentValue=t}function So(e){var t=_o.current;Ir(_o),e.type._context._currentValue=t}function Co(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function Po(e,t){wo=e,xo=Eo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(da=!0),e.firstContext=null)}function Oo(e,t){if(xo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(xo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Eo){if(null===wo)throw a(Error(308));Eo=t,wo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Eo=Eo.next=t;return e._currentValue}var No=!1;function Io(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ro(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function jo(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Mo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Do(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Io(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Io(e.memoizedState),o=n.updateQueue=Io(n.memoizedState)):r=e.updateQueue=Ro(o):null===o&&(o=n.updateQueue=Ro(r));null===o||r===o?Mo(r,t):null===r.lastUpdate||null===o.lastUpdate?(Mo(r,t),Mo(o,t)):(Mo(r,t),o.lastUpdate=t)}function Ao(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Io(e.memoizedState):zo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function zo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Ro(t)),t}function Fo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:No=!0}return r}function Uo(e,t,n,r,o){No=!1;for(var i=(t=zo(e,t)).baseState,a=null,l=0,u=t.firstUpdate,s=i;null!==u;){var c=u.expirationTime;c<o?(null===a&&(a=u,i=s),l<c&&(l=c)):(Wl(c,u.suspenseConfig),s=Fo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var d=u.expirationTime;d<o?(null===c&&(c=u,null===a&&(i=s)),l<d&&(l=d)):(s=Fo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===c&&(i=s),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=s}function Lo(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Ho(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Ho(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Ho(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw a(Error(191),n);n.call(r)}e=e.nextEffect}}var Wo=Ye.ReactCurrentBatchConfig,Bo=(new r.Component).refs;function Vo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var qo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ol(),o=Wo.suspense;(o=jo(r=Nl(r,e,o),o)).payload=t,null!=n&&(o.callback=n),Do(e,o),Rl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ol(),o=Wo.suspense;(o=jo(r=Nl(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),Do(e,o),Rl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ol(),r=Wo.suspense;(r=jo(n=Nl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),Do(e,r),Rl(e,n)}};function Yo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!rn(n,r)||!rn(o,i))}function Qo(e,t,n){var r=!1,o=jr,i=t.contextType;return"object"==typeof i&&null!==i?i=Oo(i):(o=Fr(t)?Ar:Mr.current,i=(r=null!=(r=t.contextTypes))?zr(e,o):jr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=qo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function $o(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&qo.enqueueReplaceState(t,t.state,null)}function Zo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Bo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Oo(i):(i=Fr(t)?Ar:Mr.current,o.context=zr(e,i)),null!==(i=e.updateQueue)&&(Uo(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Vo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&qo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(Uo(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ko=Array.isArray;function Go(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;if(n){if(1!==n.tag)throw a(Error(309));r=n.stateNode}if(!r)throw a(Error(147),e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===Bo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw a(Error(284));if(!n._owner)throw a(Error(290),e)}return e}function Xo(e,t){if("textarea"!==e.type)throw a(Error(31),"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Jo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=iu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=uu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Go(e,t,n),r.return=e,r):((r=au(n.type,n.key,n.props,null,e.mode,r)).ref=Go(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=su(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=lu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=uu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ze:return(n=au(t.type,t.key,t.props,null,e.mode,n)).ref=Go(e,null,t),n.return=e,n;case Ke:return(t=su(t,e.mode,n)).return=e,t}if(Ko(t)||st(t))return(t=lu(t,e.mode,n,null)).return=e,t;Xo(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ze:return n.key===o?n.type===Ge?d(e,t,n.props.children,r,o):s(e,t,n,r):null;case Ke:return n.key===o?c(e,t,n,r):null}if(Ko(n)||st(n))return null!==o?null:d(e,t,n,r,null);Xo(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ze:return e=e.get(null===r.key?n:r.key)||null,r.type===Ge?d(t,e,r.props.children,o,r.key):s(t,e,r,o);case Ke:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ko(r)||st(r))return d(t,e=e.get(n)||null,r,o,null);Xo(t,r)}return null}function m(o,a,l,u){for(var s=null,c=null,d=a,m=a=0,v=null;null!==d&&m<l.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var b=p(o,d,l[m],u);if(null===b){null===d&&(d=v);break}e&&d&&null===b.alternate&&t(o,d),a=i(b,a,m),null===c?s=b:c.sibling=b,c=b,d=v}if(m===l.length)return n(o,d),s;if(null===d){for(;m<l.length;m++)null!==(d=f(o,l[m],u))&&(a=i(d,a,m),null===c?s=d:c.sibling=d,c=d);return s}for(d=r(o,d);m<l.length;m++)null!==(v=h(d,o,m,l[m],u))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),a=i(v,a,m),null===c?s=v:c.sibling=v,c=v);return e&&d.forEach(function(e){return t(o,e)}),s}function v(o,l,u,s){var c=st(u);if("function"!=typeof c)throw a(Error(150));if(null==(u=c.call(u)))throw a(Error(151));for(var d=c=null,m=l,v=l=0,b=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(b=m,m=null):b=m.sibling;var y=p(o,m,g.value,s);if(null===y){null===m&&(m=b);break}e&&m&&null===y.alternate&&t(o,m),l=i(y,l,v),null===d?c=y:d.sibling=y,d=y,m=b}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=f(o,g.value,s))&&(l=i(g,l,v),null===d?c=g:d.sibling=g,d=g);return c}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,s))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),l=i(g,l,v),null===d?c=g:d.sibling=g,d=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===Ge&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Ze:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?i.type===Ge:s.elementType===i.type){n(e,s.sibling),(r=o(s,i.type===Ge?i.props.children:i.props)).ref=Go(e,s,i),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}i.type===Ge?((r=lu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=au(i.type,i.key,i.props,null,e.mode,u)).ref=Go(e,r,i),u.return=e,e=u)}return l(e);case Ke:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=su(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=uu(i,e.mode,u)).return=e,e=r),l(e);if(Ko(i))return m(e,r,i,u);if(st(i))return v(e,r,i,u);if(c&&Xo(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:throw e=e.type,a(Error(152),e.displayName||e.name||"Component")}return n(e,r)}}var ei=Jo(!0),ti=Jo(!1),ni={},ri={current:ni},oi={current:ni},ii={current:ni};function ai(e){if(e===ni)throw a(Error(174));return e}function li(e,t){Rr(ii,t),Rr(oi,e),Rr(ri,ni);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:sr(null,"");break;default:t=sr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Ir(ri),Rr(ri,t)}function ui(e){Ir(ri),Ir(oi),Ir(ii)}function si(e){ai(ii.current);var t=ai(ri.current),n=sr(t,e.type);t!==n&&(Rr(oi,e),Rr(ri,n))}function ci(e){oi.current===e&&(Ir(ri),Ir(oi))}var di=1,fi=1,pi=2,hi={current:0};function mi(e){for(var t=e;null!==t;){if(13===t.tag){if(null!==t.memoizedState)return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var vi=0,bi=2,gi=4,yi=8,_i=16,wi=32,Ei=64,xi=128,ki=Ye.ReactCurrentDispatcher,Ti=0,Si=null,Ci=null,Pi=null,Oi=null,Ni=null,Ii=null,Ri=0,ji=null,Mi=0,Di=!1,Ai=null,zi=0;function Fi(){throw a(Error(321))}function Ui(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!tn(e[n],t[n]))return!1;return!0}function Li(e,t,n,r,o,i){if(Ti=i,Si=t,Pi=null!==e?e.memoizedState:null,ki.current=null===Pi?Ji:ea,t=n(r,o),Di){do{Di=!1,zi+=1,Pi=null!==e?e.memoizedState:null,Ii=Oi,ji=Ni=Ci=null,ki.current=ea,t=n(r,o)}while(Di);Ai=null,zi=0}if(ki.current=Xi,(e=Si).memoizedState=Oi,e.expirationTime=Ri,e.updateQueue=ji,e.effectTag|=Mi,e=null!==Ci&&null!==Ci.next,Ti=0,Ii=Ni=Oi=Pi=Ci=Si=null,Ri=0,ji=null,Mi=0,e)throw a(Error(300));return t}function Hi(){ki.current=Xi,Ti=0,Ii=Ni=Oi=Pi=Ci=Si=null,Ri=0,ji=null,Mi=0,Di=!1,Ai=null,zi=0}function Wi(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Ni?Oi=Ni=e:Ni=Ni.next=e,Ni}function Bi(){if(null!==Ii)Ii=(Ni=Ii).next,Pi=null!==(Ci=Pi)?Ci.next:null;else{if(null===Pi)throw a(Error(310));var e={memoizedState:(Ci=Pi).memoizedState,baseState:Ci.baseState,queue:Ci.queue,baseUpdate:Ci.baseUpdate,next:null};Ni=null===Ni?Oi=e:Ni.next=e,Pi=Ci.next}return Ni}function Vi(e,t){return"function"==typeof t?t(e):t}function qi(e){var t=Bi(),n=t.queue;if(null===n)throw a(Error(311));if(n.lastRenderedReducer=e,0<zi){var r=n.dispatch;if(null!==Ai){var o=Ai.get(n);if(void 0!==o){Ai.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return tn(i,t.memoizedState)||(da=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,s=r,c=!1;do{var d=s.expirationTime;d<Ti?(c||(c=!0,u=l,o=i),d>Ri&&(Ri=d)):(Wl(d,s.suspenseConfig),i=s.eagerReducer===e?s.eagerState:e(i,s.action)),l=s,s=s.next}while(null!==s&&s!==r);c||(u=l,o=i),tn(i,t.memoizedState)||(da=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function Yi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ji?(ji={lastEffect:null}).lastEffect=e.next=e:null===(t=ji.lastEffect)?ji.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ji.lastEffect=e),e}function Qi(e,t,n,r){var o=Wi();Mi|=e,o.memoizedState=Yi(t,n,void 0,void 0===r?null:r)}function $i(e,t,n,r){var o=Bi();r=void 0===r?null:r;var i=void 0;if(null!==Ci){var a=Ci.memoizedState;if(i=a.destroy,null!==r&&Ui(r,a.deps))return void Yi(vi,n,i,r)}Mi|=e,o.memoizedState=Yi(t,n,i,r)}function Zi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ki(){}function Gi(e,t,n){if(!(25>zi))throw a(Error(301));var r=e.alternate;if(e===Si||null!==r&&r===Si)if(Di=!0,e={expirationTime:Ti,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===Ai&&(Ai=new Map),void 0===(n=Ai.get(t)))Ai.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=Ol(),i=Wo.suspense;i={expirationTime:o=Nl(o,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var l=t.last;if(null===l)i.next=i;else{var u=l.next;null!==u&&(i.next=u),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var s=t.lastRenderedState,c=r(s,n);if(i.eagerReducer=r,i.eagerState=c,tn(c,s))return}catch(e){}Rl(e,o)}}var Xi={readContext:Oo,useCallback:Fi,useContext:Fi,useEffect:Fi,useImperativeHandle:Fi,useLayoutEffect:Fi,useMemo:Fi,useReducer:Fi,useRef:Fi,useState:Fi,useDebugValue:Fi,useResponder:Fi},Ji={readContext:Oo,useCallback:function(e,t){return Wi().memoizedState=[e,void 0===t?null:t],e},useContext:Oo,useEffect:function(e,t){return Qi(516,xi|Ei,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Qi(4,gi|wi,Zi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Qi(4,gi|wi,e,t)},useMemo:function(e,t){var n=Wi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Wi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Gi.bind(null,Si,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Wi().memoizedState=e},useState:function(e){var t=Wi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:Vi,lastRenderedState:e}).dispatch=Gi.bind(null,Si,e),[t.memoizedState,e]},useDebugValue:Ki,useResponder:on},ea={readContext:Oo,useCallback:function(e,t){var n=Bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ui(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Oo,useEffect:function(e,t){return $i(516,xi|Ei,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,$i(4,gi|wi,Zi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return $i(4,gi|wi,e,t)},useMemo:function(e,t){var n=Bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ui(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:qi,useRef:function(){return Bi().memoizedState},useState:function(e){return qi(Vi)},useDebugValue:Ki,useResponder:on},ta=null,na=null,ra=!1;function oa(e,t){var n=ru(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ia(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function aa(e){if(ra){var t=na;if(t){var n=t;if(!ia(e,t)){if(!(t=Pr(n.nextSibling))||!ia(e,t))return e.effectTag|=2,ra=!1,void(ta=e);oa(ta,n)}ta=e,na=Pr(t.firstChild)}else e.effectTag|=2,ra=!1,ta=e}}function la(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;ta=e}function ua(e){if(e!==ta)return!1;if(!ra)return la(e),ra=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Tr(t,e.memoizedProps))for(t=na;t;)oa(e,t),t=Pr(t.nextSibling);return la(e),na=ta?Pr(e.stateNode.nextSibling):null,!0}function sa(){na=ta=null,ra=!1}var ca=Ye.ReactCurrentOwner,da=!1;function fa(e,t,n,r){t.child=null===e?ti(t,null,n,r):ei(t,e.child,n,r)}function pa(e,t,n,r,o){n=n.render;var i=t.ref;return Po(t,o),r=Li(e,t,n,r,i,o),null===e||da?(t.effectTag|=1,fa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ta(e,t,o))}function ha(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||ou(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=au(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ma(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:rn)(o,r)&&e.ref===t.ref)?Ta(e,t,i):(t.effectTag|=1,(e=iu(a,r)).ref=t.ref,e.return=t,t.child=e)}function ma(e,t,n,r,o,i){return null!==e&&rn(e.memoizedProps,r)&&e.ref===t.ref&&(da=!1,o<i)?Ta(e,t,i):ba(e,t,n,r,i)}function va(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ba(e,t,n,r,o){var i=Fr(n)?Ar:Mr.current;return i=zr(t,i),Po(t,o),n=Li(e,t,n,r,i,o),null===e||da?(t.effectTag|=1,fa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ta(e,t,o))}function ga(e,t,n,r,o){if(Fr(n)){var i=!0;Br(t)}else i=!1;if(Po(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Qo(t,n,r),Zo(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,s=n.contextType;"object"==typeof s&&null!==s?s=Oo(s):s=zr(t,s=Fr(n)?Ar:Mr.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==s)&&$o(t,a,r,s),No=!1;var f=t.memoizedState;u=a.state=f;var p=t.updateQueue;null!==p&&(Uo(t,p,r,a,o),u=t.memoizedState),l!==r||f!==u||Dr.current||No?("function"==typeof c&&(Vo(t,n,c,r),u=t.memoizedState),(l=No||Yo(t,n,l,r,f,u,s))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=s,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:yo(t.type,l),u=a.context,"object"==typeof(s=n.contextType)&&null!==s?s=Oo(s):s=zr(t,s=Fr(n)?Ar:Mr.current),(d="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==s)&&$o(t,a,r,s),No=!1,u=t.memoizedState,f=a.state=u,null!==(p=t.updateQueue)&&(Uo(t,p,r,a,o),f=t.memoizedState),l!==r||u!==f||Dr.current||No?("function"==typeof c&&(Vo(t,n,c,r),f=t.memoizedState),(c=No||Yo(t,n,l,r,u,f,s))?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,s)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=s,r=c):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return ya(e,t,n,r,i,o)}function ya(e,t,n,r,o,i){va(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Vr(t,n,!1),Ta(e,t,i);r=t.stateNode,ca.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=ei(t,e.child,null,i),t.child=ei(t,null,l,i)):fa(e,t,l,i),t.memoizedState=r.state,o&&Vr(t,n,!0),t.child}function _a(e){var t=e.stateNode;t.pendingContext?Hr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Hr(0,t.context,!1),li(e,t.containerInfo)}var wa={};function Ea(e,t,n){var r,o=t.mode,i=t.pendingProps,a=hi.current,l=null,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(a&pi)&&(null===e||null!==e.memoizedState)),r?(l=wa,u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=fi),Rr(hi,a&=di),null===e)if(u){if(i=i.fallback,(e=lu(null,o,0,null)).return=t,0==(2&t.mode))for(u=null!==t.memoizedState?t.child.child:t.child,e.child=u;null!==u;)u.return=e,u=u.sibling;(n=lu(i,o,n,null)).return=t,e.sibling=n,o=e}else o=n=ti(t,null,i.children,n);else{if(null!==e.memoizedState)if(o=(a=e.child).sibling,u){if(i=i.fallback,(n=iu(a,a.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==a.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;(i=iu(o,i,o.expirationTime)).return=t,n.sibling=i,o=n,n.childExpirationTime=0,n=i}else o=n=ei(t,a.child,i.children,n);else if(a=e.child,u){if(u=i.fallback,(i=lu(null,o,0,null)).return=t,i.child=a,null!==a&&(a.return=i),0==(2&t.mode))for(a=null!==t.memoizedState?t.child.child:t.child,i.child=a;null!==a;)a.return=i,a=a.sibling;(n=lu(u,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,o=i,i.childExpirationTime=0}else n=o=ei(t,a,i.children,n);t.stateNode=e.stateNode}return t.memoizedState=l,t.child=o,n}function xa(e,t,n,r,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o}:(i.isBackwards=t,i.rendering=null,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=o)}function ka(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(fa(e,t,r.children,n),0!=((r=hi.current)&pi))r=r&di|pi,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag){if(null!==e.memoizedState){e.expirationTime<n&&(e.expirationTime=n);var a=e.alternate;null!==a&&a.expirationTime<n&&(a.expirationTime=n),Co(e.return,n)}}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=di}if(Rr(hi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(r=n.alternate)&&null===mi(r)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),xa(t,!1,o,n,i);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(r=o.alternate)&&null===mi(r)){t.child=o;break}r=o.sibling,o.sibling=n,n=o,o=r}xa(t,!0,n,null,i);break;case"together":xa(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ta(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw a(Error(153));if(null!==t.child){for(n=iu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=iu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Sa(e){e.effectTag|=4}var Ca=void 0,Pa=void 0,Oa=void 0,Na=void 0;function Ia(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ra(e){switch(e.tag){case 1:Fr(e.type)&&Ur();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:if(ui(),Lr(),0!=(64&(t=e.effectTag)))throw a(Error(285));return e.effectTag=-2049&t|64,e;case 5:return ci(e),null;case 13:return Ir(hi),2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 19:return Ir(hi),null;case 4:return ui(),null;case 10:return So(e),null;default:return null}}function ja(e,t){return{value:e,source:t,stack:dt(t)}}Ca=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(20===n.tag)e.appendChild(n.stateNode.instance);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Pa=function(){},Oa=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(ai(ri.current),e=null,n){case"input":a=Et(l,a),r=Et(l,r),e=[];break;case"option":a=tr(l,a),r=tr(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=rr(l,a),r=rr(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=wr)}gr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var s=a[n];for(l in s)s.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(p.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(u||(u={}),u[l]=c[l])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(p.hasOwnProperty(n)?(null!=c&&_r(i,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&Sa(t)}},Na=function(e,t,n,r){n!==r&&Sa(t)};var Ma="function"==typeof WeakSet?WeakSet:Set;function Da(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=dt(n)),null!==n&&ct(n.type),t=t.value,null!==e&&1===e.tag&&ct(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function Aa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Kl(e,t)}else t.current=null}function za(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==vi){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==vi&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function Fa(e,t){switch("function"==typeof tu&&tu(e),e.tag){case 0:case 11:case 14:case 15:var n=e.updateQueue;if(null!==n&&null!==(n=n.lastEffect)){var r=n.next;po(97<t?97:t,function(){var t=r;do{var n=t.destroy;if(void 0!==n){var o=e;try{n()}catch(e){Kl(o,e)}}t=t.next}while(t!==r)})}break;case 1:Aa(e),"function"==typeof(t=e.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Kl(e,t)}}(e,t);break;case 5:Aa(e);break;case 4:Wa(e,t)}}function Ua(e,t){for(var n=e;;)if(Fa(n,t),null!==n.child&&4!==n.tag)n.child.return=n,n=n.child;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function La(e){return 5===e.tag||3===e.tag||4===e.tag}function Ha(e){e:{for(var t=e.return;null!==t;){if(La(t)){var n=t;break e}t=t.return}throw a(Error(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw a(Error(161))}16&n.effectTag&&(fr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||La(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var i=5===o.tag||6===o.tag;if(i||20===o.tag){var l=i?o.stateNode:o.stateNode.instance;if(n)if(r){var u=l;l=n,8===(i=t).nodeType?i.parentNode.insertBefore(u,l):i.insertBefore(u,l)}else t.insertBefore(l,n);else r?(8===(u=t).nodeType?(i=u.parentNode).insertBefore(l,u):(i=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=wr)):t.appendChild(l)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Wa(e,t){for(var n=e,r=!1,o=void 0,i=void 0;;){if(!r){r=n.return;e:for(;;){if(null===r)throw a(Error(160));switch(o=r.stateNode,r.tag){case 5:i=!1;break e;case 3:case 4:o=o.containerInfo,i=!0;break e}r=r.return}r=!0}if(5===n.tag||6===n.tag)if(Ua(n,t),i){var l=o,u=n.stateNode;8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)}else o.removeChild(n.stateNode);else if(20===n.tag)u=n.stateNode.instance,Ua(n,t),i?8===(l=o).nodeType?l.parentNode.removeChild(u):l.removeChild(u):o.removeChild(u);else if(4===n.tag){if(null!==n.child){o=n.stateNode.containerInfo,i=!0,n.child.return=n,n=n.child;continue}}else if(Fa(n,t),null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;4===(n=n.return).tag&&(r=!1)}n.sibling.return=n.return,n=n.sibling}}function Ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:za(gi,yi,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[D]=r,"input"===e&&"radio"===r.type&&null!=r.name&&kt(n,r),yr(e,o),t=yr(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?vr(n,u):"dangerouslySetInnerHTML"===l?dr(n,u):"children"===l?fr(n,u):_t(n,l,u,t)}switch(e){case"input":Tt(n,r);break;case"textarea":ir(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?nr(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?nr(n,!!r.multiple,r.defaultValue,!0):nr(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw a(Error(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,ml=so()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=mr("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}Va(t);break;case 19:Va(t);break;case 17:case 20:break;default:throw a(Error(163))}}function Va(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ma),t.forEach(function(t){var r=Xl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))})}}var qa="function"==typeof WeakMap?WeakMap:Map;function Ya(e,t,n){(n=jo(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){gl||(gl=!0,yl=r),Da(e,t)},n}function Qa(e,t,n){(n=jo(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return Da(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===_l?_l=new Set([this]):_l.add(this),Da(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var $a=Math.ceil,Za=Ye.ReactCurrentDispatcher,Ka=Ye.ReactCurrentOwner,Ga=0,Xa=8,Ja=16,el=32,tl=0,nl=1,rl=2,ol=3,il=4,al=Ga,ll=null,ul=null,sl=0,cl=tl,dl=1073741823,fl=1073741823,pl=null,hl=!1,ml=0,vl=500,bl=null,gl=!1,yl=null,_l=null,wl=!1,El=null,xl=90,kl=0,Tl=null,Sl=0,Cl=null,Pl=0;function Ol(){return(al&(Ja|el))!==Ga?1073741821-(so()/10|0):0!==Pl?Pl:Pl=1073741821-(so()/10|0)}function Nl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=co();if(0==(4&t))return 99===r?1073741823:1073741822;if((al&Ja)!==Ga)return sl;if(null!==n)e=1073741821-25*(1+((1073741821-e+(0|n.timeoutMs||5e3)/10)/25|0));else switch(r){case 99:e=1073741823;break;case 98:e=1073741821-10*(1+((1073741821-e+15)/10|0));break;case 97:case 96:e=1073741821-25*(1+((1073741821-e+500)/25|0));break;case 95:e=1;break;default:throw a(Error(326))}return null!==ll&&e===sl&&--e,e}var Il=0;function Rl(e,t){if(50<Sl)throw Sl=0,Cl=null,a(Error(185));if(null!==(e=jl(e,t))){e.pingTime=0;var n=co();if(1073741823===t)if((al&Xa)!==Ga&&(al&(Ja|el))===Ga)for(var r=Hl(e,1073741823,!0);null!==r;)r=r(!0);else Ml(e,99,1073741823),al===Ga&&vo();else Ml(e,n,t);(4&al)===Ga||98!==n&&99!==n||(null===Tl?Tl=new Map([[e,t]]):(void 0===(n=Tl.get(e))||n>t)&&Tl.set(e,t))}}function jl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(t>o.firstPendingTime&&(o.firstPendingTime=t),0===(e=o.lastPendingTime)||t<e)&&(o.lastPendingTime=t),o}function Ml(e,t,n){if(e.callbackExpirationTime<n){var r=e.callbackNode;null!==r&&r!==ro&&Qr(r),e.callbackExpirationTime=n,1073741823===n?e.callbackNode=mo(Dl.bind(null,e,Hl.bind(null,e,n))):(r=null,1!==n&&(r={timeout:10*(1073741821-n)-so()}),e.callbackNode=ho(t,Dl.bind(null,e,Hl.bind(null,e,n)),r))}}function Dl(e,t,n){var r=e.callbackNode,o=null;try{return null!==(o=t(n))?Dl.bind(null,e,o):null}finally{null===o&&r===e.callbackNode&&(e.callbackNode=null,e.callbackExpirationTime=0)}}function Al(){(al&(1|Ja|el))===Ga&&(function(){if(null!==Tl){var e=Tl;Tl=null,e.forEach(function(e,t){mo(Hl.bind(null,t,e))}),vo()}}(),Ql())}function zl(e,t){var n=al;al|=1;try{return e(t)}finally{(al=n)===Ga&&vo()}}function Fl(e,t,n,r){var o=al;al|=4;try{return po(98,e.bind(null,t,n,r))}finally{(al=o)===Ga&&vo()}}function Ul(e,t){var n=al;al&=-2,al|=Xa;try{return e(t)}finally{(al=n)===Ga&&vo()}}function Ll(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Cr(n)),null!==ul)for(n=ul.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&Ur();break;case 3:ui(),Lr();break;case 5:ci(r);break;case 4:ui();break;case 13:case 19:Ir(hi);break;case 10:So(r)}n=n.return}ll=e,ul=iu(e.current,null),sl=t,cl=tl,fl=dl=1073741823,pl=null,hl=!1}function Hl(e,t,n){if((al&(Ja|el))!==Ga)throw a(Error(327));if(e.firstPendingTime<t)return null;if(n&&e.finishedExpirationTime===t)return ql.bind(null,e);if(Ql(),e!==ll||t!==sl)Ll(e,t);else if(cl===ol)if(hl)Ll(e,t);else{var r=e.lastPendingTime;if(r<t)return Hl.bind(null,e,r)}if(null!==ul){r=al,al|=Ja;var o=Za.current;if(null===o&&(o=Xi),Za.current=Xi,n){if(1073741823!==t){var i=Ol();if(i<t)return al=r,ko(),Za.current=o,Hl.bind(null,e,i)}}else Pl=0;for(;;)try{if(n)for(;null!==ul;)ul=Bl(ul);else for(;null!==ul&&!$r();)ul=Bl(ul);break}catch(n){if(ko(),Hi(),null===(i=ul)||null===i.return)throw Ll(e,t),al=r,n;e:{var l=e,u=i.return,s=i,c=n,d=sl;if(s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var f=c,p=0!=(hi.current&fi);c=u;do{var h;if((h=13===c.tag)&&(null!==c.memoizedState?h=!1:h=void 0!==(h=c.memoizedProps).fallback&&(!0!==h.unstable_avoidThisFallback||!p)),h){if(null===(u=c.updateQueue)?((u=new Set).add(f),c.updateQueue=u):u.add(f),0==(2&c.mode)){c.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((d=jo(1073741823,null)).tag=2,Do(s,d))),s.expirationTime=1073741823;break e}s=l,l=d,null===(p=s.pingCache)?(p=s.pingCache=new qa,u=new Set,p.set(f,u)):void 0===(u=p.get(f))&&(u=new Set,p.set(f,u)),u.has(l)||(u.add(l),s=Gl.bind(null,s,f,l),f.then(s,s)),c.effectTag|=2048,c.expirationTime=d;break e}c=c.return}while(null!==c);c=Error((ct(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+dt(s))}cl!==il&&(cl=nl),c=ja(c,s),s=u;do{switch(s.tag){case 3:s.effectTag|=2048,s.expirationTime=d,Ao(s,d=Ya(s,c,d));break e;case 1:if(f=c,l=s.type,u=s.stateNode,0==(64&s.effectTag)&&("function"==typeof l.getDerivedStateFromError||null!==u&&"function"==typeof u.componentDidCatch&&(null===_l||!_l.has(u)))){s.effectTag|=2048,s.expirationTime=d,Ao(s,d=Qa(s,f,d));break e}}s=s.return}while(null!==s)}ul=Vl(i)}if(al=r,ko(),Za.current=o,null!==ul)return Hl.bind(null,e,t)}if(e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,function(e,t){var n=e.firstBatch;return!!(null!==n&&n._defer&&n._expirationTime>=t)&&(ho(97,function(){return n._onComplete(),null}),!0)}(e,t))return null;switch(ll=null,cl){case tl:throw a(Error(328));case nl:return(r=e.lastPendingTime)<t?Hl.bind(null,e,r):n?ql.bind(null,e):(Ll(e,t),mo(Hl.bind(null,e,t)),null);case rl:return 1073741823===dl&&!n&&10<(n=ml+vl-so())?hl?(Ll(e,t),Hl.bind(null,e,t)):(r=e.lastPendingTime)<t?Hl.bind(null,e,r):(e.timeoutHandle=Sr(ql.bind(null,e),n),null):ql.bind(null,e);case ol:if(!n){if(hl)return Ll(e,t),Hl.bind(null,e,t);if((n=e.lastPendingTime)<t)return Hl.bind(null,e,n);if(1073741823!==fl?n=10*(1073741821-fl)-so():1073741823===dl?n=0:(n=10*(1073741821-dl)-5e3,0>(n=(r=so())-n)&&(n=0),(t=10*(1073741821-t)-r)<(n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*$a(n/1960))-n)&&(n=t)),10<n)return e.timeoutHandle=Sr(ql.bind(null,e),n),null}return ql.bind(null,e);case il:return!n&&1073741823!==dl&&null!==pl&&(r=dl,0>=(t=0|(o=pl).busyMinDurationMs)?t=0:(n=0|o.busyDelayMs,t=(r=so()-(10*(1073741821-r)-(0|o.timeoutMs||5e3)))<=n?0:n+t-r),10<t)?(e.timeoutHandle=Sr(ql.bind(null,e),t),null):ql.bind(null,e);default:throw a(Error(329))}}function Wl(e,t){e<dl&&1<e&&(dl=e),null!==t&&e<fl&&1<e&&(fl=e,pl=t)}function Bl(e){var t=Jl(e.alternate,e,sl);return e.memoizedProps=e.pendingProps,null===t&&(t=Vl(e)),Ka.current=null,t}function Vl(e){ul=e;do{var t=ul.alternate;if(e=ul.return,0==(1024&ul.effectTag)){e:{var n=t,r=sl,i=(t=ul).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Fr(t.type)&&Ur();break;case 3:ui(),Lr(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==n&&null!==n.child||(ua(t),t.effectTag&=-3),Pa(t);break;case 5:ci(t),r=ai(ii.current);var l=t.type;if(null!==n&&null!=t.stateNode)Oa(n,t,l,i,r),n.ref!==t.ref&&(t.effectTag|=128);else if(i){var u=ai(ri.current);if(ua(t)){i=void 0,l=(n=t).stateNode;var s=n.type,c=n.memoizedProps;switch(l[M]=n,l[D]=c,s){case"iframe":case"object":case"embed":Dn("load",l);break;case"video":case"audio":for(var d=0;d<ne.length;d++)Dn(ne[d],l);break;case"source":Dn("error",l);break;case"img":case"image":case"link":Dn("error",l),Dn("load",l);break;case"form":Dn("reset",l),Dn("submit",l);break;case"details":Dn("toggle",l);break;case"input":xt(l,c),Dn("invalid",l),_r(r,"onChange");break;case"select":l._wrapperState={wasMultiple:!!c.multiple},Dn("invalid",l),_r(r,"onChange");break;case"textarea":or(l,c),Dn("invalid",l),_r(r,"onChange")}for(i in gr(s,c),d=null,c)c.hasOwnProperty(i)&&(u=c[i],"children"===i?"string"==typeof u?l.textContent!==u&&(d=["children",u]):"number"==typeof u&&l.textContent!==""+u&&(d=["children",""+u]):p.hasOwnProperty(i)&&null!=u&&_r(r,i));switch(s){case"input":Ve(l),St(l,c,!0);break;case"textarea":Ve(l),ar(l);break;case"select":case"option":break;default:"function"==typeof c.onClick&&(l.onclick=wr)}r=d,n.updateQueue=r,null!==r&&Sa(t)}else{c=l,n=i,s=t,d=9===r.nodeType?r:r.ownerDocument,u===lr.html&&(u=ur(c)),u===lr.html?"script"===c?((c=d.createElement("div")).innerHTML="<script><\/script>",d=c.removeChild(c.firstChild)):"string"==typeof n.is?d=d.createElement(c,{is:n.is}):(d=d.createElement(c),"select"===c&&(c=d,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):d=d.createElementNS(u,c),(c=d)[M]=s,c[D]=n,Ca(n=c,t,!1,!1),s=n;var f=r,h=yr(l,i);switch(l){case"iframe":case"object":case"embed":Dn("load",s),r=i;break;case"video":case"audio":for(r=0;r<ne.length;r++)Dn(ne[r],s);r=i;break;case"source":Dn("error",s),r=i;break;case"img":case"image":case"link":Dn("error",s),Dn("load",s),r=i;break;case"form":Dn("reset",s),Dn("submit",s),r=i;break;case"details":Dn("toggle",s),r=i;break;case"input":xt(s,i),r=Et(s,i),Dn("invalid",s),_r(f,"onChange");break;case"option":r=tr(s,i);break;case"select":s._wrapperState={wasMultiple:!!i.multiple},r=o({},i,{value:void 0}),Dn("invalid",s),_r(f,"onChange");break;case"textarea":or(s,i),r=rr(s,i),Dn("invalid",s),_r(f,"onChange");break;default:r=i}gr(l,r),c=void 0,d=l,u=s;var m=r;for(c in m)if(m.hasOwnProperty(c)){var v=m[c];"style"===c?vr(u,v):"dangerouslySetInnerHTML"===c?null!=(v=v?v.__html:void 0)&&dr(u,v):"children"===c?"string"==typeof v?("textarea"!==d||""!==v)&&fr(u,v):"number"==typeof v&&fr(u,""+v):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(p.hasOwnProperty(c)?null!=v&&_r(f,c):null!=v&&_t(u,c,v,h))}switch(l){case"input":Ve(s),St(s,i,!1);break;case"textarea":Ve(s),ar(s);break;case"option":null!=i.value&&s.setAttribute("value",""+wt(i.value));break;case"select":r=s,s=i,r.multiple=!!s.multiple,null!=(c=s.value)?nr(r,!!s.multiple,c,!1):null!=s.defaultValue&&nr(r,!!s.multiple,s.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=wr)}kr(l,i)&&Sa(t),t.stateNode=n}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw a(Error(166));break;case 6:if(n&&null!=t.stateNode)Na(n,t,n.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw a(Error(166));n=ai(ii.current),ai(ri.current),ua(t)?(r=t.stateNode,n=t.memoizedProps,r[M]=t,r.nodeValue!==n&&Sa(t)):(r=t,(n=(9===n.nodeType?n:n.ownerDocument).createTextNode(i))[M]=t,r.stateNode=n)}break;case 11:break;case 13:if(Ir(hi),i=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}r=null!==i,i=!1,null===n?ua(t):(i=null!==(l=n.memoizedState),r||null===l||null!==(l=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=l,l.nextEffect=s):(t.firstEffect=t.lastEffect=l,l.nextEffect=null),l.effectTag=8)),r&&!i&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(hi.current&fi)?cl===tl&&(cl=rl):cl!==tl&&cl!==rl||(cl=ol)),(r||i)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:ui(),Pa(t);break;case 10:So(t);break;case 9:case 14:break;case 17:Fr(t.type)&&Ur();break;case 18:break;case 19:if(Ir(hi),null===(i=t.memoizedState))break;if(l=0!=(64&t.effectTag),null===(s=i.rendering)){if(l)Ia(i,!1);else if(cl!==tl||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=mi(n))){for(t.effectTag|=64,Ia(i,!1),null!==(n=s.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),t.firstEffect=t.lastEffect=null,n=t.child;null!==n;)l=r,(i=n).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(s=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=s.childExpirationTime,i.expirationTime=s.expirationTime,i.child=s.child,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,l=s.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),n=n.sibling;Rr(hi,hi.current&di|pi),t=t.child;break e}n=n.sibling}}else{if(!l)if(null!==(n=mi(s))){if(t.effectTag|=64,l=!0,Ia(i,!0),null===i.tail&&"hidden"===i.tailMode){null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),null!==(t=t.lastEffect=i.lastEffect)&&(t.nextEffect=null);break}}else so()>i.tailExpiration&&1<r&&(t.effectTag|=64,l=!0,Ia(i,!1),t.expirationTime=t.childExpirationTime=r-1);i.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=i.last)?r.sibling=s:t.child=s,i.last=s)}if(null!==i.tail){0===i.tailExpiration&&(i.tailExpiration=so()+500),r=i.tail,i.rendering=r,i.tail=r.sibling,i.lastEffect=t.lastEffect,r.sibling=null,n=hi.current,Rr(hi,n=l?n&di|pi:n&di),t=r;break e}break;case 20:break;default:throw a(Error(156))}t=null}if(r=ul,1===sl||1!==r.childExpirationTime){for(n=0,i=r.child;null!==i;)(l=i.expirationTime)>n&&(n=l),(s=i.childExpirationTime)>n&&(n=s),i=i.sibling;r.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(1024&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=ul.firstEffect),null!==ul.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=ul.firstEffect),e.lastEffect=ul.lastEffect),1<ul.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=ul:e.firstEffect=ul,e.lastEffect=ul))}else{if(null!==(t=Ra(ul)))return t.effectTag&=1023,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=1024)}if(null!==(t=ul.sibling))return t;ul=e}while(null!==ul);return cl===tl&&(cl=il),null}function ql(e){var t=co();return po(99,Yl.bind(null,e,t)),null!==El&&ho(97,function(){return Ql(),null}),null}function Yl(e,t){if(Ql(),(al&(Ja|el))!==Ga)throw a(Error(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw a(Error(177));e.callbackNode=null,e.callbackExpirationTime=0;var o=n.expirationTime,i=n.childExpirationTime;if(o=i>o?i:o,e.firstPendingTime=o,o<e.lastPendingTime&&(e.lastPendingTime=o),e===ll&&(ul=ll=null,sl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){i=al,al|=el,Ka.current=null,Er=Mn;var l=qn();if(Yn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var s=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(s&&0!==s.rangeCount){u=s.anchorNode;var c=s.anchorOffset,d=s.focusNode;s=s.focusOffset;try{u.nodeType,d.nodeType}catch(e){u=null;break e}var f=0,p=-1,h=-1,m=0,v=0,b=l,g=null;t:for(;;){for(var y;b!==u||0!==c&&3!==b.nodeType||(p=f+c),b!==d||0!==s&&3!==b.nodeType||(h=f+s),3===b.nodeType&&(f+=b.nodeValue.length),null!==(y=b.firstChild);)g=b,b=y;for(;;){if(b===l)break t;if(g===u&&++m===c&&(p=f),g===d&&++v===s&&(h=f),null!==(y=b.nextSibling))break;g=(b=g).parentNode}b=y}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;xr={focusedElem:l,selectionRange:u},Mn=!1,bl=o;do{try{for(;null!==bl;){if(0!=(256&bl.effectTag)){var _=bl.alternate;switch((l=bl).tag){case 0:case 11:case 15:za(bi,vi,l);break;case 1:if(256&l.effectTag&&null!==_){var w=_.memoizedProps,E=_.memoizedState,x=l.stateNode,k=x.getSnapshotBeforeUpdate(l.elementType===l.type?w:yo(l.type,w),E);x.__reactInternalSnapshotBeforeUpdate=k}break;case 3:case 5:case 6:case 4:case 17:break;default:throw a(Error(163))}}bl=bl.nextEffect}}catch(e){if(null===bl)throw a(Error(330));Kl(bl,e),bl=bl.nextEffect}}while(null!==bl);bl=o;do{try{for(_=t;null!==bl;){var T=bl.effectTag;if(16&T&&fr(bl.stateNode,""),128&T){var S=bl.alternate;if(null!==S){var C=S.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(14&T){case 2:Ha(bl),bl.effectTag&=-3;break;case 6:Ha(bl),bl.effectTag&=-3,Ba(bl.alternate,bl);break;case 4:Ba(bl.alternate,bl);break;case 8:Wa(w=bl,_),w.return=null,w.child=null,w.memoizedState=null,w.updateQueue=null,w.dependencies=null;var P=w.alternate;null!==P&&(P.return=null,P.child=null,P.memoizedState=null,P.updateQueue=null,P.dependencies=null)}bl=bl.nextEffect}}catch(e){if(null===bl)throw a(Error(330));Kl(bl,e),bl=bl.nextEffect}}while(null!==bl);if(C=xr,S=qn(),T=C.focusedElem,_=C.selectionRange,S!==T&&T&&T.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(T.ownerDocument.documentElement,T)){null!==_&&Yn(T)&&(S=_.start,void 0===(C=_.end)&&(C=S),"selectionStart"in T?(T.selectionStart=S,T.selectionEnd=Math.min(C,T.value.length)):(C=(S=T.ownerDocument||document)&&S.defaultView||window).getSelection&&(C=C.getSelection(),w=T.textContent.length,P=Math.min(_.start,w),_=void 0===_.end?P:Math.min(_.end,w),!C.extend&&P>_&&(w=_,_=P,P=w),w=Vn(T,P),E=Vn(T,_),w&&E&&(1!==C.rangeCount||C.anchorNode!==w.node||C.anchorOffset!==w.offset||C.focusNode!==E.node||C.focusOffset!==E.offset)&&((S=S.createRange()).setStart(w.node,w.offset),C.removeAllRanges(),P>_?(C.addRange(S),C.extend(E.node,E.offset)):(S.setEnd(E.node,E.offset),C.addRange(S))))),S=[];for(C=T;C=C.parentNode;)1===C.nodeType&&S.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof T.focus&&T.focus(),T=0;T<S.length;T++)(C=S[T]).element.scrollLeft=C.left,C.element.scrollTop=C.top}xr=null,Mn=!!Er,Er=null,e.current=n,bl=o;do{try{for(T=r;null!==bl;){var O=bl.effectTag;if(36&O){var N=bl.alternate;switch(C=T,(S=bl).tag){case 0:case 11:case 15:za(_i,wi,S);break;case 1:var I=S.stateNode;if(4&S.effectTag)if(null===N)I.componentDidMount();else{var R=S.elementType===S.type?N.memoizedProps:yo(S.type,N.memoizedProps);I.componentDidUpdate(R,N.memoizedState,I.__reactInternalSnapshotBeforeUpdate)}var j=S.updateQueue;null!==j&&Lo(0,j,I);break;case 3:var M=S.updateQueue;if(null!==M){if(P=null,null!==S.child)switch(S.child.tag){case 5:P=S.child.stateNode;break;case 1:P=S.child.stateNode}Lo(0,M,P)}break;case 5:var D=S.stateNode;null===N&&4&S.effectTag&&(C=D,kr(S.type,S.memoizedProps)&&C.focus());break;case 6:case 4:case 12:break;case 13:case 19:case 17:case 20:break;default:throw a(Error(163))}}if(128&O){var A=bl.ref;if(null!==A){var z=bl.stateNode;switch(bl.tag){case 5:var F=z;break;default:F=z}"function"==typeof A?A(F):A.current=F}}512&O&&(wl=!0),bl=bl.nextEffect}}catch(e){if(null===bl)throw a(Error(330));Kl(bl,e),bl=bl.nextEffect}}while(null!==bl);bl=null,oo(),al=i}else e.current=n;if(wl)wl=!1,El=e,kl=r,xl=t;else for(bl=o;null!==bl;)t=bl.nextEffect,bl.nextEffect=null,bl=t;if(0!==(t=e.firstPendingTime)?Ml(e,O=go(O=Ol(),t),t):_l=null,"function"==typeof eu&&eu(n.stateNode,r),1073741823===t?e===Cl?Sl++:(Sl=0,Cl=e):Sl=0,gl)throw gl=!1,e=yl,yl=null,e;return(al&Xa)!==Ga?null:(vo(),null)}function Ql(){if(null===El)return!1;var e=El,t=kl,n=xl;return El=null,kl=0,xl=90,po(97<n?97:n,$l.bind(null,e,t))}function $l(e){if((al&(Ja|el))!==Ga)throw a(Error(331));var t=al;for(al|=el,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:za(xi,vi,n),za(vi,Ei,n)}}catch(t){if(null===e)throw a(Error(330));Kl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return al=t,vo(),!0}function Zl(e,t,n){Do(e,t=Ya(e,t=ja(n,t),1073741823)),null!==(e=jl(e,1073741823))&&Ml(e,99,1073741823)}function Kl(e,t){if(3===e.tag)Zl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Zl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===_l||!_l.has(r))){Do(n,e=Qa(n,e=ja(t,e),1073741823)),null!==(n=jl(n,1073741823))&&Ml(n,99,1073741823);break}}n=n.return}}function Gl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),ll===e&&sl===n?cl===ol||cl===rl&&1073741823===dl&&so()-ml<vl?Ll(e,sl):hl=!0:e.lastPendingTime<n||(0!==(t=e.pingTime)&&t<n||(e.pingTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),Ml(e,t=go(t=Ol(),n),n)))}function Xl(e,t){var n=e.stateNode;null!==n&&n.delete(t),n=go(n=Ol(),t=Nl(n,e,null)),null!==(e=jl(e,t))&&Ml(e,n,t)}var Jl=void 0;Jl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||Dr.current)da=!0;else if(r<n){switch(da=!1,t.tag){case 3:_a(t),sa();break;case 5:if(si(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:Fr(t.type)&&Br(t);break;case 4:li(t,t.stateNode.containerInfo);break;case 10:To(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ea(e,t,n):(Rr(hi,hi.current&di),null!==(t=Ta(e,t,n))?t.sibling:null);Rr(hi,hi.current&di);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return ka(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),Rr(hi,hi.current),!r)return null}return Ta(e,t,n)}}else da=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=zr(t,Mr.current),Po(t,n),o=Li(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Hi(),Fr(r)){var i=!0;Br(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&Vo(t,r,l,e),o.updater=qo,t.stateNode=o,o._reactInternalFiber=t,Zo(t,r,e,n),t=ya(null,t,r,!0,i,n)}else t.tag=0,fa(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=o,i=t.tag=function(e){if("function"==typeof e)return ou(e)?1:0;if(null!=e){if((e=e.$$typeof)===rt)return 11;if(e===at)return 14}return 2}(o),e=yo(o,e),i){case 0:t=ba(null,t,o,e,n);break;case 1:t=ga(null,t,o,e,n);break;case 11:t=pa(null,t,o,e,n);break;case 14:t=ha(null,t,o,yo(o.type,e),r,n);break;default:throw a(Error(306),o,"")}return t;case 0:return r=t.type,o=t.pendingProps,ba(e,t,r,o=t.elementType===r?o:yo(r,o),n);case 1:return r=t.type,o=t.pendingProps,ga(e,t,r,o=t.elementType===r?o:yo(r,o),n);case 3:if(_a(t),null===(r=t.updateQueue))throw a(Error(282));return o=null!==(o=t.memoizedState)?o.element:null,Uo(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(sa(),t=Ta(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(na=Pr(t.stateNode.containerInfo.firstChild),ta=t,o=ra=!0),o?(t.effectTag|=2,t.child=ti(t,null,r,n)):(fa(e,t,r,n),sa()),t=t.child),t;case 5:return si(t),null===e&&aa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,Tr(r,o)?l=null:null!==i&&Tr(r,i)&&(t.effectTag|=16),va(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(fa(e,t,l,n),t=t.child),t;case 6:return null===e&&aa(t),null;case 13:return Ea(e,t,n);case 4:return li(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ei(t,null,r,n):fa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,pa(e,t,r,o=t.elementType===r?o:yo(r,o),n);case 7:return fa(e,t,t.pendingProps,n),t.child;case 8:case 12:return fa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,To(t,i=o.value),null!==l){var u=l.value;if(0===(i=tn(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Dr.current){t=Ta(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===u.tag&&((c=jo(n,null)).tag=2,Do(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),Co(u.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}fa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Po(t,n),r=r(o=Oo(o,i.unstable_observedBits)),t.effectTag|=1,fa(e,t,r,n),t.child;case 14:return i=yo(o=t.type,t.pendingProps),ha(e,t,o,i=yo(o.type,i),r,n);case 15:return ma(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:yo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Fr(r)?(e=!0,Br(t)):e=!1,Po(t,n),Qo(t,r,o),Zo(t,r,o,n),ya(null,t,r,!0,e,n);case 19:return ka(e,t,n)}throw a(Error(156))};var eu=null,tu=null;function nu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function ru(e,t,n,r){return new nu(e,t,n,r)}function ou(e){return!(!(e=e.prototype)||!e.isReactComponent)}function iu(e,t){var n=e.alternate;return null===n?((n=ru(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function au(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)ou(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ge:return lu(n.children,o,i,t);case nt:l=8,o|=7;break;case Xe:l=8,o|=1;break;case Je:return(e=ru(12,n,t,8|o)).elementType=Je,e.type=Je,e.expirationTime=i,e;case ot:return(e=ru(13,n,t,o)).type=ot,e.elementType=ot,e.expirationTime=i,e;case it:return(e=ru(19,n,t,o)).elementType=it,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case et:l=10;break e;case tt:l=9;break e;case rt:l=11;break e;case at:l=14;break e;case lt:l=16,r=null;break e}throw a(Error(130),null==e?e:typeof e,"")}return(t=ru(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function lu(e,t,n,r){return(e=ru(7,e,r,t)).expirationTime=n,e}function uu(e,t,n){return(e=ru(6,e,null,t)).expirationTime=n,e}function su(e,t,n){return(t=ru(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function cu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=this.firstBatch=null,this.pingTime=this.lastPendingTime=this.firstPendingTime=this.callbackExpirationTime=0}function du(e,t,n){return e=new cu(e,t,n),t=ru(3,null,null,2===t?7:1===t?3:0),e.current=t,t.stateNode=e}function fu(e,t,n,r,o,i){var l=t.current;e:if(n){t:{if(2!==an(n=n._reactInternalFiber)||1!==n.tag)throw a(Error(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Fr(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw a(Error(171))}if(1===n.tag){var s=n.type;if(Fr(s)){n=Wr(n,s,u);break e}}n=u}else n=jr;return null===t.context?t.context=n:t.pendingContext=n,t=i,(o=jo(r,o)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Do(l,o),Rl(l,r),r}function pu(e,t,n,r){var o=t.current,i=Ol(),a=Wo.suspense;return fu(e,t,n,o=Nl(i,o,a),a,r)}function hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function mu(e){var t=1073741821-25*(1+((1073741821-Ol()+500)/25|0));t<=Il&&--t,this._expirationTime=Il=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function vu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function bu(e,t,n){this._internalRoot=du(e,t,n)}function gu(e,t){this._internalRoot=du(e,2,t)}function yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _u(e,t,n,r,o){var i=n._reactRootContainer,a=void 0;if(i){if(a=i._internalRoot,"function"==typeof o){var l=o;o=function(){var e=hu(a);l.call(e)}}pu(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new bu(e,0,t)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=hu(a);u.call(e)}}Ul(function(){pu(t,a,e,o)})}return hu(a)}function wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!yu(t))throw a(Error(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(Tt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=U(r);if(!o)throw a(Error(90));qe(r),Tt(r,o)}}}break;case"textarea":ir(e,n);break;case"select":null!=(t=n.value)&&nr(e,!!n.multiple,t,!1)}},mu.prototype.render=function(e){if(!this._defer)throw a(Error(250));this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new vu;return fu(e,t,null,n,null,r._onCommit),r},mu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},mu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(!this._defer||null===t)throw a(Error(251));if(this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;if(null===r)throw a(Error(251));r._next=o._next,this._next=t,e.firstBatch=this}if(this._defer=!1,t=n,(al&(Ja|el))!==Ga)throw a(Error(253));mo(Hl.bind(null,e,t)),vo(),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},mu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},vu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},vu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];if("function"!=typeof n)throw a(Error(191),n);n()}}},gu.prototype.render=bu.prototype.render=function(e,t){var n=this._internalRoot,r=new vu;return null!==(t=void 0===t?null:t)&&r.then(t),pu(e,n,null,r._onCommit),r},gu.prototype.unmount=bu.prototype.unmount=function(e){var t=this._internalRoot,n=new vu;return null!==(e=void 0===e?null:e)&&n.then(e),pu(null,t,null,n._onCommit),n},gu.prototype.createBatch=function(){var e=new mu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},je=zl,Me=Fl,De=Al,Ae=function(e,t){var n=al;al|=2;try{return e(t)}finally{(al=n)===Ga&&vo()}};var Eu,xu,ku={createPortal:wu,findDOMNode:function(e){if(null==e)e=null;else if(1!==e.nodeType){var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw a(Error(188));throw a(Error(268),Object.keys(e))}e=null===(e=un(t))?null:e.stateNode}return e},hydrate:function(e,t,n){if(!yu(t))throw a(Error(200));return _u(null,e,t,!0,n)},render:function(e,t,n){if(!yu(t))throw a(Error(200));return _u(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!yu(n))throw a(Error(200));if(null==e||void 0===e._reactInternalFiber)throw a(Error(38));return _u(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!yu(e))throw a(Error(40));return!!e._reactRootContainer&&(Ul(function(){_u(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return wu.apply(void 0,arguments)},unstable_batchedUpdates:zl,unstable_interactiveUpdates:function(e,t,n,r){return Al(),Fl(e,t,n,r)},unstable_discreteUpdates:Fl,unstable_flushDiscreteUpdates:Al,flushSync:function(e,t){if((al&(Ja|el))!==Ga)throw a(Error(187));var n=al;al|=1;try{return po(99,e.bind(null,t))}finally{al=n,vo()}},unstable_createRoot:function(e,t){if(!yu(e))throw a(Error(299),"unstable_createRoot");return new gu(e,null!=t&&!0===t.hydrate)},unstable_createSyncRoot:function(e,t){if(!yu(e))throw a(Error(299),"unstable_createRoot");return new bu(e,1,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=al;al|=1;try{po(99,e)}finally{(al=t)===Ga&&vo()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[z,F,U,I.injectEventPluginsByName,f,q,function(e){C(e,V)},Ie,Re,Un,N,Ql,{current:!1}]}};xu=(Eu={findFiberByHostInstance:A,bundleType:0,version:"16.9.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);eu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},tu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Eu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ye.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=un(e))?null:e.stateNode},findFiberByHostInstance:function(e){return xu?xu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var Tu={default:ku},Su=Tu&&ku||Tu;e.exports=Su.default||Su},function(e,t,n){"use strict";e.exports=n(20)},function(e,t,n){"use strict";
/** @license React v0.15.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r=void 0,o=void 0,i=void 0,a=void 0,l=void 0;if(t.unstable_now=void 0,t.unstable_forceFrameRate=void 0,"undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,s=null,c=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(c,0),e}};t.unstable_now=function(){return Date.now()},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(c,0))},o=function(e,t){s=setTimeout(e,t)},i=function(){clearTimeout(s)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,f=window.Date,p=window.setTimeout,h=window.clearTimeout,m=window.requestAnimationFrame,v=window.cancelAnimationFrame;"undefined"!=typeof console&&("function"!=typeof m&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")),t.unstable_now="object"==typeof d&&"function"==typeof d.now?function(){return d.now()}:function(){return f.now()};var b=!1,g=null,y=-1,_=-1,w=33.33,E=-1,x=-1,k=0,T=!1;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):0<e?(w=Math.floor(1e3/e),T=!0):(w=33.33,T=!1)};var S=function(){if(null!==g){var e=t.unstable_now(),n=0<k-e;try{g(n,e)||(g=null)}catch(e){throw P.postMessage(null),e}}},C=new MessageChannel,P=C.port2;C.port1.onmessage=S;var O=function(e){if(null===g)x=E=-1,b=!1;else{b=!0,m(function(e){h(y),O(e)});var n=function(){k=t.unstable_now()+w/2,S(),y=p(n,3*w)};if(y=p(n,3*w),-1!==E&&.1<e-E){var r=e-E;!T&&-1!==x&&r<w&&x<w&&(8.33>(w=r<x?x:r)&&(w=8.33)),x=r}E=e,k=e+w,P.postMessage(null)}};r=function(e){g=e,b||(b=!0,m(function(e){O(e)}))},o=function(e,n){_=p(function(){e(t.unstable_now())},n)},i=function(){h(_),_=-1}}var N=null,I=null,R=null,j=3,M=!1,D=!1,A=!1;function z(e,t){var n=e.next;if(n===e)N=null;else{e===N&&(N=n);var r=e.previous;r.next=n,n.previous=r}e.next=e.previous=null,n=e.callback,r=j;var o=R;j=e.priorityLevel,R=e;try{var i=e.expirationTime<=t;switch(j){case 1:var a=n(i);break;case 2:case 3:case 4:a=n(i);break;case 5:a=n(i)}}catch(e){throw e}finally{j=r,R=o}if("function"==typeof a)if(t=e.expirationTime,e.callback=a,null===N)N=e.next=e.previous=e;else{a=null,i=N;do{if(t<=i.expirationTime){a=i;break}i=i.next}while(i!==N);null===a?a=N:a===N&&(N=e),(t=a.previous).next=a.previous=e,e.next=a,e.previous=t}}function F(e){if(null!==I&&I.startTime<=e)do{var t=I,n=t.next;if(t===n)I=null;else{I=n;var r=t.previous;r.next=n,n.previous=r}t.next=t.previous=null,W(t,t.expirationTime)}while(null!==I&&I.startTime<=e)}function U(e){A=!1,F(e),D||(null!==N?(D=!0,r(L)):null!==I&&o(U,I.startTime-e))}function L(e,n){D=!1,A&&(A=!1,i()),F(n),M=!0;try{if(e){if(null!==N)do{z(N,n),F(n=t.unstable_now())}while(null!==N&&!a())}else for(;null!==N&&N.expirationTime<=n;)z(N,n),F(n=t.unstable_now());return null!==N||(null!==I&&o(U,I.startTime-n),!1)}finally{M=!1}}function H(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}function W(e,t){if(null===N)N=e.next=e.previous=e;else{var n=null,r=N;do{if(t<r.expirationTime){n=r;break}r=r.next}while(r!==N);null===n?n=N:n===N&&(N=e),(t=n.previous).next=n.previous=e,e.next=n,e.previous=t}}var B=l;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:H(e)}else a=H(e),u=l;if(e={callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,next:null,previous:null},u>l){if(a=u,null===I)I=e.next=e.previous=e;else{n=null;var s=I;do{if(a<s.startTime){n=s;break}s=s.next}while(s!==I);null===n?n=I:n===I&&(I=e),(a=n.previous).next=n.previous=e,e.next=n,e.previous=a}null===N&&I===e&&(A?i():A=!0,o(U,u-l))}else W(e,a),D||M||(D=!0,r(L));return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(e===t)e===N?N=null:e===I&&(I=null);else{e===N?N=t:e===I&&(I=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_shouldYield=function(){var e=t.unstable_now();return F(e),null!==R&&null!==N&&N.startTime<=e&&N.expirationTime<R.expirationTime||a()},t.unstable_requestPaint=B,t.unstable_continueExecution=function(){D||M||(D=!0,r(L))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return N}},function(e,t,n){"use strict";(function(e){var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=p(n(0)),a=n(23);n(25);var l=p(n(29)),u=p(n(31)),s=p(n(32)),c=p(n(33)),d=p(n(36)),f=p(n(39));n(4);function p(e){return e&&e.__esModule?e:{default:e}}t.default=(0,a.hot)(e)(function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={signed_in:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){return i.default.createElement("div",{id:"app-instance"},!this.state.signed_in&&i.default.createElement(l.default,{store:this.props.store}),this.state.signed_in&&i.default.createElement("div",null,i.default.createElement(s.default,{store:this.props.store}),i.default.createElement("div",{className:"sections"},i.default.createElement(u.default,{id:"s_products",store:this.props.store},i.default.createElement(c.default,{store:this.props.store}),i.default.createElement(d.default,{store:this.props.store}),i.default.createElement(f.default,{store:this.props.store})),i.default.createElement(u.default,{id:"s_settings",store:this.props.store},"settings"))))}},{key:"onStoreChange",value:function(){var e=this.props.store.getState().user;this.setState({signed_in:e.signed_in})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),this.onStoreChange()}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}())}).call(this,n(22)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=n(0))&&"object"==typeof r&&"default"in r?r.default:r;function i(e){return i.warnAboutHMRDisabled&&(i.warnAboutHMRDisabled=!0,console.error("React-Hot-Loader: misconfiguration detected, using production version in non-production environment."),console.error("React-Hot-Loader: Hot Module Replacement is not enabled.")),o.Children.only(e.children)}i.warnAboutHMRDisabled=!1;var a=function e(){return e.shouldWrapWithAppContainer?function(e){return function(t){return o.createElement(i,null,o.createElement(e,t))}}:function(e){return e}};a.shouldWrapWithAppContainer=!1;t.AppContainer=i,t.hot=a,t.areComponentsEqual=function(e,t){return e===t},t.setConfig=function(){},t.cold=function(e){return e},t.configureComponent=function(){}},function(e,t,n){var r=n(26);"string"==typeof r&&(r=[[e.i,r,""]]);var o={insert:"head",singleton:!1};n(28)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(t=e.exports=n(27)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css?family=Poppins:400,900&display=swap);",""]),t.push([e.i,'body{margin:0;font-weight:900;background-color:#fff;color:#1e9aa3;font-family:"Poppins",sans-serif;position:absolute;width:100vw;height:100vh;overflow:hidden}body *{box-sizing:border-box}body #app-instance{position:absolute;top:0;left:0;width:100vw;height:100vh;overflow:hidden}@keyframes loader{0%{transform:rotate(0deg)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}#sign-in{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#fff}#sign-in .content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}#sign-in .content input{display:block;width:240px;height:48px;margin-top:8px;outline:none;font-family:"Poppins",sans-serif;color:#1e9aa3;border:1px solid #e6e6e6;padding:0 24px}#sign-in .content input:nth-child(1){margin-top:0}#sign-in .content .error{position:absolute;bottom:-16px;left:0;width:128px;height:0;overflow:hidden;transition:250ms cubic-bezier(0.675, 0, 0.325, 1)}#sign-in .content .error .inner{position:absolute;bottom:0;left:0;width:128px;height:16px;font-size:12px;font-weight:300;color:rgba(196,74,100,0.5)}#sign-in .content .error.active{bottom:-32px;height:16px}#sign-in .content .submit{position:absolute;bottom:-64px;right:0px;width:96px;height:48px;transition:250ms cubic-bezier(0.675, 0, 0.325, 1);background-color:rgba(30,154,163,0.8);cursor:pointer;overflow:hidden}#sign-in .content .submit svg,#sign-in .content .submit .loader{position:absolute;left:50%;transform:translate(-50%, -50%);transition:250ms cubic-bezier(0.675, 0, 0.325, 1)}#sign-in .content .submit svg{top:50%;opacity:1;width:24px;fill:#fff}#sign-in .content .submit .loader{top:150%;margin-top:-3px;font-size:16px;color:#fff;opacity:0}#sign-in .content .submit:hover:not(.loading){background-color:#1e9aa3}#sign-in .content .submit.loading{background-color:#888}#sign-in .content .submit.loading svg{opacity:0;top:-50%}#sign-in .content .submit.loading .loader{opacity:1;top:50%}.sidebar{z-index:11;position:absolute;top:0;left:0;width:calc(96px + 1px);height:100%;background-color:#fff;color:#1e9aa3;transition:400ms cubic-bezier(0.675, 0, 0.325, 1);border-right:1px solid #ebebeb;font-weight:300;padding-top:16px}.sidebar .header{position:absolute;top:0;left:0;width:100%;height:64px;box-shadow:0px 2px 3px rgba(0,0,0,0.04)}.sidebar .header .logo{display:none;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);transition:400ms cubic-bezier(0.675, 0, 0.325, 1);height:12px;fill:rgba(30,154,163,0.8)}.sidebar .footer{position:absolute;bottom:0;left:0;width:100%;height:auto}.sidebar .footer .button{position:relative;width:100%;height:64px;border-top:1px solid #e6e6e6;cursor:pointer}.sidebar .footer .button:hover{background-color:rgba(30,154,163,0.04)}.sidebar .footer .button:active{background-color:rgba(30,154,163,0.08)}.sidebar .footer .button .icon{position:absolute;top:50%;left:36px;transform:translateY(-50%);width:24px;fill:#1e9aa3;transition:400ms cubic-bezier(0.675, 0, 0.325, 1)}.sidebar .footer .button .label{position:absolute;top:50%;left:92px;transform:translateY(-50%);font-size:14px;opacity:0;transition:400ms cubic-bezier(0.675, 0, 0.325, 1);white-space:nowrap}.sidebar:hover{width:calc(96px * 2)}.sidebar:not(.active):hover .footer .button .icon{left:80px}.sidebar.active{width:calc(50vw + 96px/2)}.sidebar.active .header .logo{height:24px}.sidebar.active .footer .button .label{opacity:1}.sections{position:absolute;top:0;right:0;width:calc(100% - 96px);height:100%}.sections .section{display:none;position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden}.sections .section.active{display:block}.sections .section .section-inner{transition:400ms cubic-bezier(0.675, 0, 0.325, 1);display:flex;position:absolute;top:0;left:0;width:auto;height:100%}.view{position:relative;flex:1;min-width:calc((100vw - 96px) / 2);max-width:calc((100vw - 96px) / 2);height:100%;padding-top:64px;border-right:1px solid #e6e6e6;background-color:#f7f7f7;color:#1e9aa3}.view .view-header{position:absolute;top:0;left:0;width:100%;height:64px;background-color:#fff;color:#1e9aa3;box-shadow:0 2px 4px rgba(0,0,0,0.05);overflow-y:hidden;z-index:10}.view .view-header .label{position:absolute;top:50%;left:32px;transform:translateY(-50%);font-weight:300;text-transform:uppercase;font-size:14px}.view .view-header .topbar-buttons{display:flex;position:absolute;top:0;right:0;width:auto;height:64px;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.view .view-header .topbar-buttons .topbar-button{position:relative;min-width:68px;max-width:68px;height:100%;flex:1;border-left:1px solid #f5f5f5;cursor:pointer}.view .view-header .topbar-buttons .topbar-button .inner{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:24px;fill:#888}.view .view-header .topbar-buttons .topbar-button.edit .inner{height:18px}.view .view-header .topbar-buttons .topbar-button.close .inner{height:18px}.view .view-header .topbar-buttons .topbar-button:hover{background-color:rgba(30,154,163,0.02)}.view .view-header .topbar-buttons .topbar-button:hover .inner{fill:#1e9aa3}.view .view-header .topbar-buttons .topbar-button:active{background-color:rgba(30,154,163,0.08)}.view .view-header .topbar-buttons .topbar-button.add.creating .inner{top:calc(50% - 8px);left:calc(50% - 8px);animation:infinite 1500ms cubic-bezier(0.675, 0, 0.325, 1) loader;height:16px}.view .view-header:nth-child(1){border-left-width:0}.view .view-body{position:absolute;top:64px;left:0;width:100%;height:calc(100% - 64px);padding-top:64px;text-align:center;overflow-x:hidden;overflow-y:scroll}.view .view-body>.loader{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(242,242,242,0.9);z-index:9;opacity:0;pointer-events:none}.view .view-body>.loader .inner{display:none;position:absolute;top:calc(45% - 16px);left:calc(50% - 16px);width:32px;fill:#1e9aa3}.view .view-body.loading{pointer-events:none;overflow-y:hidden}.view .view-body.loading .loader{opacity:1}.view .view-body.loading .loader .inner{display:block;animation:infinite 1500ms cubic-bezier(0.675, 0, 0.325, 1) loader}.view:nth-child(2n){background-color:#f2f2f2;color:#1e9aa3}#v_products .view-body{padding:64px}#v_products .view-body .background-icon{position:sticky;top:50%;width:100%;height:0}#v_products .view-body .background-icon svg{position:absolute;left:50%;transform:translateX(-50%);fill:rgba(30,154,163,0.03);width:calc(100% + 128px)}#v_products .view-body .no-elements{font-weight:300;font-size:14px}#v_products .view-body .all-products .product{position:relative;margin-top:32px;width:100%;height:160px;cursor:pointer;box-shadow:0 2px 4px rgba(0,0,0,0.03);transition:120ms cubic-bezier(0.675, 0, 0.325, 1);background-color:#fff;overflow:hidden}#v_products .view-body .all-products .product:hover{box-shadow:0 3px 4px rgba(0,0,0,0.07)}#v_products .view-body .all-products .product:nth-child(1){margin-top:0}#v_products .view-body .all-products .product .container{position:absolute;top:0;left:0;width:100%;height:160px}#v_products .view-body .all-products .product .left-side{position:absolute;top:0;left:0;width:160px;height:100%;background-color:rgba(30,154,163,0.5)}#v_products .view-body .all-products .product .left-side svg{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:96px;fill:rgba(255,255,255,0.5)}#v_products .view-body .all-products .product .right-side{position:absolute;top:0;right:0;width:calc(100% - 160px);height:100%;padding:24px 32px;text-align:left}#v_products .view-body .all-products .product .right-side .label{font-size:16px;margin-bottom:8px;width:calc(100% - 40px)}#v_products .view-body .all-products .product .right-side .desc{font-size:12px;font-weight:300;width:calc(100% - 40px);height:72px;overflow-y:hidden}#v_products .view-body .all-products .product .right-side.editing input,#v_products .view-body .all-products .product .right-side.editing textarea{background-color:#fff;border:0px solid rgba(30,154,163,0.5);outline:none;width:100%;font-family:"Poppins",sans-serif;color:#1e9aa3;resize:none;border:1px solid #ebebeb;padding:4px 8px}#v_products .view-body .all-products .product .right-side.editing label{position:absolute;top:0;left:0;font-weight:900;transition:120ms cubic-bezier(0.675, 0, 0.325, 1)}#v_products .view-body .all-products .product .right-side.editing input:focus+label,#v_products .view-body .all-products .product .right-side.editing label.active{top:-12px;left:1px;font-size:8px;font-weight:300}#v_products .view-body .all-products .product .right-side.editing .label,#v_products .view-body .all-products .product .right-side.editing .desc{position:relative}#v_products .view-body .all-products .product .right-side.editing .label{margin-top:-2px}#v_products .view-body .all-products .product .right-side.editing .label input{font-size:16px;font-weight:900}#v_products .view-body .all-products .product .right-side.editing .desc{overflow-y:initial}#v_products .view-body .all-products .product .right-side.editing .desc textarea{height:76px}#v_products .view-body .all-products .product .right-side.editing .desc textarea:focus+label,#v_products .view-body .all-products .product .right-side.editing .desc label.active{top:-12px}#v_products .view-body .all-products .product .actions{position:absolute;top:0;right:0;width:48px;height:100%;border-left:1px solid #f5f5f5;background-color:#fff;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#v_products .view-body .all-products .product .actions .action{position:absolute;left:0;width:100%;height:calc(100% / 2);background-color:#fff;border-top:1px solid #f5f5f5;cursor:pointer;z-index:2}#v_products .view-body .all-products .product .actions .action:nth-child(2){border-top:none}#v_products .view-body .all-products .product .actions .action.remove{top:50%}#v_products .view-body .all-products .product .actions .action.edit,#v_products .view-body .all-products .product .actions .action.save{top:0}#v_products .view-body .all-products .product .actions .action.drag{top:calc((100% / 3) * 2);cursor:grab}#v_products .view-body .all-products .product .actions .action.drag:active{cursor:grabbing}#v_products .view-body .all-products .product .actions .action .inner{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);transition:120ms cubic-bezier(0.675, 0, 0.325, 1);width:16px;fill:#888}#v_products .view-body .all-products .product .actions .action:hover{background-color:rgba(30,154,163,0.02)}#v_products .view-body .all-products .product .actions .action:active{background-color:rgba(30,154,163,0.08)}#v_products .view-body .all-products .product .actions .action.remove:hover .inner{fill:#c44a64}#v_products .view-body .all-products .product .actions .action.drag:hover .inner{fill:#1e9aa3}#v_products .view-body .all-products .product .actions .action.edit:hover .inner,#v_products .view-body .all-products .product .actions .action.save:hover .inner{fill:#1e9aa3}#v_products .view-body .all-products .product .actions .action:active{background-color:#f6fdfd}#v_products .view-body .all-products .product .warning{position:absolute;bottom:0;left:0;width:100%;height:0;transition:120ms cubic-bezier(0.675, 0, 0.325, 1);overflow:hidden;box-sizing:border-box;background-color:#fafafa;cursor:initial}#v_products .view-body .all-products .product .warning .inner{position:absolute;bottom:0;left:0;width:100%;height:32px;border-top:1px solid #f0f0f0}#v_products .view-body .all-products .product .warning .inner .label{position:absolute;top:50%;left:24px;transform:translateY(-50%);font-size:12px;font-weight:300;text-transform:uppercase;color:#888}#v_products .view-body .all-products .product .warning .inner .response{position:absolute;top:50%;right:24px;transform:translateY(-50%);font-size:12px;text-transform:uppercase}#v_products .view-body .all-products .product .warning .inner .response>*{display:inline-block;margin-left:16px;transition:200ms cubic-bezier(0.675, 0, 0.325, 1);cursor:pointer}#v_products .view-body .all-products .product .warning .inner .response .agree{color:#a06e79}#v_products .view-body .all-products .product .warning .inner .response .disagree{color:#3b8186}#v_products .view-body .all-products .product .warning .inner .response .agree:hover{color:#c44a64}#v_products .view-body .all-products .product .warning .inner .response .disagree:hover{color:#1e9aa3}#v_products .view-body .all-products .product.active{background-color:#f6fdfd;box-shadow:0 0 0 rgba(0,0,0,0)}#v_processes .view-body{padding:64px}#v_processes .view-body .no-elements{font-weight:300;font-size:14px}#v_processes .view-body .elements.dragging *{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:grabbing !important;transition:none}#v_processes .view-body .elements .drag-container .drag-placeholder{position:relative;height:48px;margin-top:16px;border:1px solid #e6e6e6}#v_processes .view-body .elements .drag-container:nth-child(1) .drag-placeholder{margin-top:0}#v_processes .view-body .elements .process{position:relative;height:48px;background-color:#fff;transition:background-color 200ms cubic-bezier(0.675, 0, 0.325, 1),box-shadow 200ms cubic-bezier(0.675, 0, 0.325, 1);cursor:pointer;margin-top:16px;box-shadow:0 2px 4px rgba(0,0,0,0.03)}#v_processes .view-body .elements .process:nth-child(1){margin-top:0}#v_processes .view-body .elements .process:hover{box-shadow:0 3px 4px rgba(0,0,0,0.07)}#v_processes .view-body .elements .process.active{background-color:#f6fdfd;box-shadow:0 0 0 rgba(0,0,0,0)}#v_processes .view-body .elements .process.dragging{position:fixed;width:calc(50vw - 96px / 2 - 64px * 2);z-index:9;transition:none;box-shadow:0 2px 6px rgba(0,0,0,0.2)}#v_processes .view-body .elements .process.dragging *{transition:none}#v_processes .view-body .elements .process .drag{position:absolute;top:0;left:0;width:48px;height:100%;background-color:rgba(30,154,163,0.8);cursor:grab}#v_processes .view-body .elements .process .drag:active{cursor:grabbing}#v_processes .view-body .elements .process .drag svg{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);pointer-events:none;fill:#fff;width:24px}#v_processes .view-body .elements .process .label{position:absolute;top:50%;left:72px;transform:translateY(-50%);font-weight:300;font-size:14px}#v_processes .view-body .elements .process #process-input-label{position:absolute;top:50%;left:62px;transform:translateY(-50%);padding:2px 8px;color:#1e9aa3;outline:none;font-family:"Poppins",sans-serif;font-weight:300;font-size:14px;width:calc(100% - 62px - (96px + 12px));border:1px solid #ebebeb}#v_processes .view-body .elements .process .actions{position:absolute;top:0;right:0;width:calc(48px * 2);height:100%;background-color:#fff}#v_processes .view-body .elements .process .action{position:absolute;top:0;width:48px;height:100%;border-left:1px solid #f5f5f5;cursor:pointer;z-index:5;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#v_processes .view-body .elements .process .action.remove{right:0}#v_processes .view-body .elements .process .action.remove:hover .inner{fill:#c44a64}#v_processes .view-body .elements .process .action.edit{right:48px}#v_processes .view-body .elements .process .action.edit:hover .inner{fill:#1e9aa3}#v_processes .view-body .elements .process .action .inner{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:16px;fill:#888;cursor:pointer}#v_processes .view-body .elements .process .action:hover{background-color:rgba(30,154,163,0.02)}#v_processes .view-body .elements .process .action:active{background-color:rgba(30,154,163,0.08)}#v_process_info .view-body{padding:0;padding-bottom:32px}#v_process_info .image{width:100%;height:320px;background-color:rgba(30,154,163,0.3)}#v_process_info .header{padding:32px 48px;text-align:left}#v_process_info .header .label{font-size:16px;font-weight:900}#v_process_info .header .desc{margin-top:4px;font-size:12px;font-weight:300 !important}.grid{position:relative;width:calc(100% - 64px);height:auto;margin-left:32px;border:1px solid rgba(30,154,163,0.2);border-bottom-width:0;background-color:#fff;box-shadow:0px 2px 3px rgba(0,0,0,0.04)}.grid#process-steps{margin-top:16px}.grid>.loader{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(255,255,255,0.95);z-index:2}.grid>.loader svg{position:absolute;top:calc(50% - 8px);left:calc(50% - 8px);width:16px;fill:#1e9aa3;animation:1500ms infinite cubic-bezier(0.675, 0, 0.325, 1) loader}.grid .grid-header{position:relative;width:100%;height:64px;border-bottom:1px solid rgba(30,154,163,0.2);text-align:left;padding-left:32px;font-weight:900;font-size:14px;line-height:64px;box-shadow:0px 2px 3px rgba(0,0,0,0.06);overflow-y:hidden;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.grid .grid-header .closed-icon{position:absolute;top:50%;right:calc(66px + 22px);transform:translateY(-50%) rotate(180deg);opacity:0;fill:#888;width:16px}.grid .grid-header .add-new{position:absolute;top:0;right:0;width:66px;height:100%;border:1px solid rgba(30,154,163,0.1);border-top-width:0;border-bottom-width:0;cursor:pointer;transition:120ms cubic-bezier(0.675, 0, 0.325, 1)}.grid .grid-header .add-new svg:not(.loader){position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:20px;fill:#888}.grid .grid-header .add-new:hover{background-color:rgba(30,154,163,0.02)}.grid .grid-header .add-new:hover svg{fill:#1e9aa3}.grid .grid-header .add-new:active{background-color:rgba(30,154,163,0.08)}.grid .grid-header .add-new .loader{position:absolute;top:calc(50% - 8px);left:calc(50% - 8px);width:16px;fill:#1e9aa3;animation:1500ms infinite cubic-bezier(0.675, 0, 0.325, 1) loader}.grid .grid-header:hover .closed-icon{right:calc(66px + 20px);width:20px;fill:#1e9aa3}.grid .grid-body{position:absolute;top:64px;left:0;width:100%;overflow:hidden}.grid .grid-body .grid-body-inner{position:absolute;bottom:0;left:0;width:100%}.grid .grid-element{position:relative;width:100%;height:48px;border-bottom:1px solid rgba(30,154,163,0.1);text-align:left}.grid .grid-element .fields.numbered{padding-left:66px}.grid .grid-element .fields .number{position:absolute;top:0;left:0;width:66px;height:64px;border-right:1px solid rgba(30,154,163,0.1);line-height:48px;text-align:center;font-weight:300;font-size:12px}.grid .grid-element .fields .label{border-right:1px solid rgba(30,154,163,0.1);padding-left:32px}.grid .grid-element .fields .value{padding-left:32px}.grid .grid-element .fields input{color:#1e9aa3;outline:none;font-family:"Poppins",sans-serif;font-weight:300;font-size:12px;width:calc(100% - 16px);margin-left:-8px;padding:2px 8px;border:1px solid #ebebeb}.grid .grid-element .fields .label,.grid .grid-element .fields .value{display:inline-block;width:calc((100% - 66px * 2) / 2);height:100%;font-weight:300;line-height:48px;font-size:12px}.grid .grid-element .fields.single .label{width:100%;border:0px solid transparent}.grid .grid-element .fields.single input{width:calc(100% - 66px * 2 - 16px)}.grid .grid-element .action-buttons{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.grid .grid-element .action-buttons .action-button{position:absolute;top:0;width:66px;height:100%;border-left:1px solid rgba(30,154,163,0.1);cursor:pointer}.grid .grid-element .action-buttons .action-button svg{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);fill:#888}.grid .grid-element .action-buttons .action-button:hover{background-color:rgba(30,154,163,0.02)}.grid .grid-element .action-buttons .action-button:hover svg{fill:#1e9aa3}.grid .grid-element .action-buttons .action-button:active{background-color:rgba(30,154,163,0.08)}.grid .grid-element .action-buttons .remove{right:0}.grid .grid-element .action-buttons .remove svg{width:16px}.grid .grid-element .action-buttons .remove:hover svg{fill:#c44a64}.grid .grid-element .action-buttons .edit{right:66px}.grid .grid-element .action-buttons .edit svg{width:16px}.grid .grid-element .action-buttons .save{right:66px}.grid .grid-element .action-buttons .save svg{width:16px}.grid.closed{height:64px !important}.grid.closed .grid-body{height:0 !important}.grid.closed .closed-icon{opacity:1}.notes{margin-top:48px}.notes .add{padding-top:48px;padding-bottom:48px;background-color:#fff;border:1px solid rgba(30,154,163,0.2);box-shadow:0px 2px 3px rgba(0,0,0,0.04);width:calc(100% - 64px);margin-left:32px}.notes .add .title{position:relative;text-align:left;font-size:16px;margin-bottom:16px;margin-left:120px;line-height:1}.notes .add .title .submit{position:absolute;bottom:-8px;right:120px;width:fit-content;padding:8px 12px;font-size:12px;font-weight:300;text-transform:uppercase;color:#888;background-color:#fff;border:1px solid #e6e6e6;cursor:pointer}.notes .add .title .submit:hover{color:#1e9aa3;border-color:rgba(30,154,163,0.4)}.notes .add .title .submit:active{background-color:rgba(30,154,163,0.1)}.notes .add .content-field{height:80px;margin-top:8px;resize:none}.notes .add .label-field,.notes .add .content-field{display:block;width:calc(100% - 240px);margin-left:120px;color:#1e9aa3;outline:none;font-family:"Poppins",sans-serif;font-weight:300;font-size:12px;padding:8px 12px;border:1px solid #ebebeb}.notes .elements{position:relative;width:calc(100% - 64px);margin-left:32px;margin-top:16px}.notes .elements .element{position:relative;width:100%;height:auto;margin-bottom:16px;width:calc(100%)}.notes .elements .element .author-image{position:absolute;top:50%;left:calc(128px / 2);transform:translate(-50%, -50%);width:52px;height:52px;background-color:rgba(30,154,163,0.5);border-radius:50%}.notes .elements .element .content{position:relative;width:100%;min-height:120px;background-color:#fff;border:1px solid rgba(30,154,163,0.2);box-shadow:0px 2px 3px rgba(0,0,0,0.04);padding:16px 24px;padding-left:128px;text-align:left;font-weight:300}.notes .elements .element .content .label{font-size:16px}.notes .elements .element .content .author{position:absolute;right:24px;top:20px;color:rgba(30,154,163,0.6);font-size:11px}.notes .elements .element .content .value{margin-top:8px;font-size:12px}\n',""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),i=r.sources.map(function(e){return"/*# sourceURL=".concat(r.sourceRoot).concat(e," */")});return[n].concat(i).concat([o]).join("\n")}var a,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2],"{").concat(n,"}"):n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];null!=i&&(r[i]=!0)}for(var a=0;a<e.length;a++){var l=e[a];null!=l[0]&&r[l[0]]||(n&&!l[2]?l[2]=n:n&&(l[2]="(".concat(l[2],") and (").concat(n,")")),t.push(l))}},t}},function(e,t,n){"use strict";var r,o={},i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}();function l(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function u(e,t){for(var n=0;n<e.length;n++){var r=e[n],i=o[r.id],a=0;if(i){for(i.refs++;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(v(r.parts[a],t))}else{for(var l=[];a<r.parts.length;a++)l.push(v(r.parts[a],t));o[r.id]={id:r.id,refs:1,parts:l}}}}function s(e){var t=document.createElement("style");if(void 0===e.attributes.nonce){var r=n.nc;r&&(e.attributes.nonce=r)}if(Object.keys(e.attributes).forEach(function(n){t.setAttribute(n,e.attributes[n])}),"function"==typeof e.insert)e.insert(t);else{var o=a(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var c,d=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o&&e.setAttribute("media",o),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,m=0;function v(e,t){var n,r,o;if(t.singleton){var i=m++;n=h||(h=s(t)),r=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=s(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).attributes="object"==typeof t.attributes?t.attributes:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=l(e,t);return u(n,t),function(e){for(var r=[],i=0;i<n.length;i++){var a=n[i],s=o[a.id];s&&(s.refs--,r.push(s))}e&&u(l(e,t),t);for(var c=0;c<r.length;c++){var d=r[c];if(0===d.refs){for(var f=0;f<d.parts.length;f++)d.parts[f]();delete o[d.id]}}}}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o},u=n(4);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={signing_in:!1,failed_sign_in:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){return l.default.createElement("div",{id:"sign-in"},l.default.createElement("div",{className:"content"},l.default.createElement("input",{type:"mail",className:"mail",placeholder:"E-mail"}),l.default.createElement("input",{type:"password",className:"pass",placeholder:"Password"}),l.default.createElement("div",{className:"error"+(this.state.failed_sign_in?" active":"")},l.default.createElement("div",{className:"inner"},"An Error Occured")),l.default.createElement("div",{className:"submit"+(this.state.signing_in?" loading":""),onClick:this.signIn.bind(this)},l.default.createElement("svg",{viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-sign-in"})),l.default.createElement("div",{className:"loader"},". . ."))))}},{key:"signIn",value:function(){if(!this.state.signing_in){var e=document.querySelectorAll("#sign-in .mail")[0].value,t=document.querySelectorAll("#sign-in .pass")[0].value;this.props.store.dispatch((0,u.sign_in)(e,t))}}},{key:"onStoreChange",value:function(){var e=this.props.store.getState().user;this.setState({signing_in:e.signing_in,failed_sign_in:e.failed_sign_in})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fetch_user_token=void 0;var r=n(1);t.fetch_user_token=function(e,t){return new Promise(function(n,o){(0,r.get_request)("user/token",[{key:"mail",value:e},{key:"pass",value:t}]).then(function(e){n(e)},function(e){o(e)})})}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o};var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={active:!1,left:0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){return l.default.createElement("div",{className:"section"+(this.state.active?" active":""),id:this.props.id},l.default.createElement("div",{className:"section-inner",style:{left:-this.state.left+"px"}},this.props.children))}},{key:"translateInner",value:function(e){var t=document.querySelectorAll("#"+this.props.id+" #"+e),n=t.length>0?t[0].offsetLeft:0,r=t.length>0?n+t[0].clientWidth:0,o=document.getElementById(this.props.id),i=this.state.left,a=i+o.clientWidth;if("sidebar"==e){var l=getComputedStyle(document.getElementById("app-instance"));return-(parseInt(l.width)/2-48)}return n-1<i?n:r+1>a?r-o.clientWidth:0}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.navigation.current_section==this.props.id,n=this.translateInner(e.navigation.current_view);this.setState({active:t,left:n})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),this.onStoreChange()}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=u},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o};var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={active:!0,edit:!0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){return l.default.createElement("div",{className:"sidebar"+(this.state.active?" active":"")},l.default.createElement("header",{className:"header"},l.default.createElement("svg",{className:"logo",viewBox:"0 0 512 124"},l.default.createElement("use",{xlinkHref:"#icon-logo"}))),l.default.createElement("footer",{className:"footer"},l.default.createElement("div",{className:"to-products button"},l.default.createElement("svg",{className:"icon",viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-products"})),l.default.createElement("div",{className:"label"},"Products")),l.default.createElement("div",{className:"to-team button"},l.default.createElement("svg",{className:"icon",viewBox:"0 0 24 24"},l.default.createElement("use",{xlinkHref:"#icon-people"})),l.default.createElement("div",{className:"label"},"Team Management"))))}},{key:"onStoreChange",value:function(){var e="sidebar"==this.props.store.getState().navigation.current_view;this.setState({active:e})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),this.onStoreChange()}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=u},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=c(n(0)),a=c(n(5)),l=n(2),u=n(6),s=n(3);function c(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={fetching:!0,creating:!1,processes_fetching:!1,signed_in:!1,user_token:null,user_role:null,current:null,children:[],products:[],deleting:null,editing:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){var e=this;return i.default.createElement(a.default,{label:"products",id:"v_products",store:this.props.store,add:this.newProduct.bind(this),creating:this.state.creating,fetching:this.state.fetching},i.default.createElement("div",{className:"background-icon"},i.default.createElement("svg",{viewBox:"0 0 24 24"},i.default.createElement("use",{xlinkHref:"#icon-products"}))),this.state.products.length>0&&i.default.createElement("div",{className:"all-products"},this.state.products.map(function(t){return e.renderProduct(t)})),0==this.state.products.length&&i.default.createElement("div",{className:"no-elements"},"Start by adding a new product!"))}},{key:"renderProduct",value:function(e){var t=this;return i.default.createElement("div",{className:"product"+(this.state.current==e.id?" active":""),onClick:this.openProduct.bind(this,"v_processes",e.id),key:e.id},i.default.createElement("div",{className:"container"},i.default.createElement("div",{className:"left-side"},i.default.createElement("svg",{viewBox:"0 0 24 24"},i.default.createElement("use",{xlinkHref:"#icon-products"}))),this.state.editing!=e.id&&i.default.createElement("div",{className:"right-side"},i.default.createElement("div",{className:"label"},e.label),i.default.createElement("div",{className:"desc"},e.description)),this.state.editing==e.id&&i.default.createElement("div",{className:"right-side editing"},i.default.createElement("div",{className:"label"},i.default.createElement("input",{type:"text",id:"product-input-label",autoComplete:"off",onClick:function(e){e.stopPropagation()},onKeyDown:function(n){13==n.keyCode&&t.saveProduct(n,e.id)}})),i.default.createElement("div",{className:"desc"},i.default.createElement("textarea",{type:"textarea",id:"product-input-desc",autoComplete:"off",onClick:function(e){e.stopPropagation()},onKeyUp:function(e){16==e.keyCode&&(t.shift_pressed=!1)},onKeyDown:function(n){t.shift_pressed&&13==n.keyCode&&t.saveProduct(n,e.id),t.shift_pressed=16==n.keyCode}}))),0==this.state.user_role&&i.default.createElement("div",{className:"actions"},this.state.deleting!=e.id&&i.default.createElement("div",{className:"remove action",onClick:function(n){n.stopPropagation(),t.setState({deleting:e.id}),clearTimeout(t.deletion_to),t.deletion_to=setTimeout(function(e){t.setState({deleting:null})},1500)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-delete"}))),this.state.deleting==e.id&&i.default.createElement("div",{className:"remove accept action",onClick:function(n){clearTimeout(t.deletion_to),t.removeProduct(n,e.id)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-accept"}))),this.state.editing!=e.id&&i.default.createElement("div",{className:"edit action",onClick:function(n){t.editProduct(n,e)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-edit"}))),this.state.editing==e.id&&i.default.createElement("div",{className:"save action",onClick:function(n){t.saveProduct(n,e.id)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-save"}))))))}},{key:"openProduct",value:function(e,t){this.state.processes_fetching||(this.props.store.dispatch((0,l.switch_view)(e)),t!==this.state.current&&(this.props.store.dispatch((0,u.set_current_product)(t)),this.props.store.dispatch((0,s.fetch_processes)(this.state.user_token,t))))}},{key:"newProduct",value:function(){this.props.store.dispatch((0,u.new_product)(this.state.user_token,"New product","Product description"))}},{key:"removeProduct",value:function(e,t){e.stopPropagation(),this.props.store.dispatch((0,u.remove_product)(this.state.user_token,t)),t==this.state.current&&this.props.store.dispatch((0,l.switch_view)("sidebar"))}},{key:"editProduct",value:function(e,t){e.stopPropagation(),this.setState({editing:t.id},function(){var e=document.getElementById("product-input-label"),n=document.getElementById("product-input-desc");e.value=t.label,n.value=t.description,e.focus()}.bind(this))}},{key:"saveProduct",value:function(e,t){e.stopPropagation();var n=document.getElementById("product-input-label").value,r=document.getElementById("product-input-desc").value;this.props.store.dispatch((0,u.edit_product)(this.state.user_token,t,{label:n,description:r})),this.setState({editing:null})}},{key:"onStoreChange",value:function(){var e=this,t=this.props.store.getState(),n=t.processes.fetching,r=t.products.fetching,o=t.products.creating,i=t.products.elements,a=t.products.current,l=t.user.token,s=t.user.info.role,c=this.state.signed_in,d=t.user.signed_in;this.setState({fetching:r,creating:o,processes_fetching:n,signed_in:d,user_token:l,user_role:s,products:i,current:a},function(t){d&&!c&&e.props.store.dispatch((0,u.fetch_products)(l))})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),this.onStoreChange()}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_product=t.delete_product=t.new_product=t.fetch_products=void 0;var r=n(1);t.fetch_products=function(e){return new Promise(function(t,n){(0,r.get_request)("product",[{key:"user_token",value:e}]).then(function(e){t(e)},function(e){n(e)})})},t.new_product=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new Promise(function(o,i){(0,r.post_request)("product","label="+t+"&description="+n,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})},t.delete_product=function(e,t){return new Promise(function(n,o){(0,r.delete_request)("product","id="+t,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){n(e)},function(e){o(e)})})},t.edit_product=function(e,t,n){return new Promise(function(o,i){(0,r.put_request)("product","id="+t+"&info="+JSON.stringify(n),[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_process=t.delete_process=t.new_process=t.fetch_processes=void 0;var r=n(1);t.fetch_processes=function(e,t){return new Promise(function(n,o){(0,r.get_request)("process",[{key:"user_token",value:e},{key:"product_id",value:t},{key:"fields",value:"label,description,product_id,index"}]).then(function(e){n(e)},function(e){o(e)})})},t.new_process=function(e,t,n,o){return new Promise(function(i,a){(0,r.post_request)("process","product_id="+t+"&label="+n+"&description="+o,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){i(e)},function(e){a(e)})})},t.delete_process=function(e,t){return new Promise(function(n,o){(0,r.delete_request)("process","id="+t,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){n(e)},function(e){o(e)})})},t.edit_process=function(e,t,n){return new Promise(function(o,i){(0,r.put_request)("process","id="+t+"&info="+JSON.stringify(n),[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=f(n(0)),a=f(n(5)),l=n(2),u=n(6),s=n(3),c=n(7),d=n(8);function f(e){return e&&e.__esModule?e:{default:e}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={user_token:null,fetching:!0,creating:!1,current:null,elements:[],current_product:null,current_product_label:"",editing:null,deleting:null,drag:{id:null,posx:0,posy:0,ox:0,oy:0,originx:0,originy:0}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){var e=this;return i.default.createElement(a.default,{label:"Processes - "+this.state.current_product_label,id:"v_processes",store:this.props.store,previous_view:"sidebar",close_callback:this.onClose.bind(this),add:this.newProcess.bind(this),fetching:this.state.fetching,creating:this.state.creating},this.state.elements.length>0&&i.default.createElement("div",{className:"elements"+(null!=this.state.drag.id?" dragging":"")},this.state.elements.sort(function(e,t){return"new"==e.index&&"new"!=t.index?1:"new"!=e.index&&"new"==t.index?-1:e.index>t.index?1:e.index<t.index?-1:0}).map(function(t){return e.state.drag.id==t.id?i.default.createElement("div",{className:"drag-container",key:"process-"+t.id},e.renderProcess(t),i.default.createElement("div",{className:"drag-placeholder"})):e.renderProcess(t)})),0==this.state.elements.length&&i.default.createElement("div",{className:"no-elements"},"Start by adding a new process!"))}},{key:"renderProcess",value:function(e){var t,n=this;return i.default.createElement("div",(p(t={key:e.id,className:"process"+(e.id==this.state.current?" active":"")+(e.id==this.state.drag.id?" dragging":""),"data-process-id":e.id},"key","process-"+e.id),p(t,"onClick",this.openProcess.bind(this,"v_process_info",e.id)),p(t,"style",this.state.drag.id==e.id?{top:this.state.drag.posy-this.state.drag.oy+"px",left:this.state.drag.posx-this.state.drag.ox+"px",transition:"none"}:{}),t),i.default.createElement("div",{className:"drag",onMouseDown:function(t){n.dragStart(t,e.id)}},i.default.createElement("svg",{viewBox:"0 0 24 24"},i.default.createElement("use",{xlinkHref:"#icon-drag"}))),this.state.editing!=e.id&&i.default.createElement("div",{className:"label"},e.label),this.state.editing==e.id&&i.default.createElement("input",{type:"text",id:"process-input-label",onClick:function(e){e.stopPropagation()},onKeyDown:function(t){13==t.keyCode&&n.saveProcess(t,e.id)},autoComplete:"off"}),i.default.createElement("div",{className:"actions"},this.state.editing!=e.id&&i.default.createElement("div",{className:"action edit",onClick:function(t){n.editProcess(t,e)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-edit"}))),this.state.editing==e.id&&i.default.createElement("div",{className:"action edit",onClick:function(t){n.saveProcess(t,e.id)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-save"}))),this.state.deleting!=e.id&&i.default.createElement("div",{className:"action remove",onClick:function(t){t.stopPropagation(),n.setState({deleting:e.id}),clearTimeout(n.deletion_to),n.deletion_to=setTimeout(function(e){n.setState({deleting:null})},1500)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-delete"}))),this.state.deleting==e.id&&i.default.createElement("div",{className:"action remove",onClick:function(t){n.removeProcess(t,e.id),n.clearTimeout(n.deletion_to)}},i.default.createElement("svg",{viewBox:"0 0 24 24",className:"inner"},i.default.createElement("use",{xlinkHref:"#icon-accept"})))))}},{key:"dragStart",value:function(e,t){e.stopPropagation();var n=e.target.getBoundingClientRect(),r=n.x,o=e.clientY,i=e.clientY-n.y;this.setState({drag:Object.assign(this.state.drag,{id:t,ox:0,oy:i,posx:r,posy:o})})}},{key:"dragOngoing",value:function(e){if(e.stopPropagation(),null!=this.state.drag.id){for(var t=this.state.elements.concat([]),n=document.querySelectorAll(".elements > .process, .drag-container > .drag-placeholder"),r=function(e){for(var n=0;n<t.length;n++)if(t[n].id==e)return n},o=void 0,i=document.querySelectorAll(".drag-container > .process")[0].getBoundingClientRect(),a=0;a<n.length;a++){0==a&&(o=a);var l=n[a].getBoundingClientRect();if(!n[a].classList.contains("drag-placeholder")){var u=parseInt(n[a].getAttribute("data-process-id"));i.y+i.height>l.y+l.height?(o=a+1,t[r(u)].index=a):t[r(u)].index=a+1}}t[r(this.state.drag.id)].index=o,this.setState({drag:Object.assign(this.state.drag,{posy:e.clientY,elements:t})})}}},{key:"dragEnd",value:function(e){var t=this;e.stopPropagation(),null!=this.state.drag.id&&this.setState({drag:Object.assign(this.state.drag,{id:null})},function(){for(var e=t.state.elements,n=[],r=[],o=0;o<e.length;o++)n.push(e[o].id),r.push({index:e[o].index});t.props.store.dispatch((0,s.edit_processes)(n,r))})}},{key:"openProcess",value:function(e,t){this.props.store.dispatch((0,l.switch_view)(e)),this.props.current!=t&&(this.props.store.dispatch((0,s.set_current_process)(t)),this.props.store.dispatch((0,c.fetch_properties)(this.state.user_token,t)),this.props.store.dispatch((0,d.fetch_steps)(this.state.user_token,t)))}},{key:"newProcess",value:function(){this.props.store.dispatch((0,s.new_process)(this.state.user_token,this.state.current_product))}},{key:"removeProcess",value:function(e,t){e.stopPropagation(),t==this.state.current&&(this.props.store.dispatch((0,s.set_current_process)(null)),this.props.store.dispatch((0,l.switch_view)("v_products"))),this.props.store.dispatch((0,s.remove_process)(this.state.user_token,t))}},{key:"editProcess",value:function(e,t){e.stopPropagation(),this.setState({editing:t.id},function(){var e=document.getElementById("process-input-label");e.value=t.label,e.focus()}.bind(this))}},{key:"saveProcess",value:function(e,t){null!=e.stopPropagation&&e.stopPropagation();var n=document.getElementById("process-input-label").value;this.props.store.dispatch((0,s.edit_process)(this.state.user_token,t,{label:n})),this.setState({editing:null})}},{key:"onClose",value:function(){var e=this;setTimeout(function(){e.props.store.dispatch((0,u.set_current_product)(null))},400)}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.user.token,n=e.processes.fetching,r=e.processes.creating,o=e.processes.current,i=e.products.current,a=e.products.elements.find(function(e){return e.id==i});null!=a&&(a=a.label);var l=e.processes.elements.filter(function(e){return e.product_id==i}),u=this.state.elements,s=l.map(function(e){var t=u.find(function(t){return t.id==e.id});return null!=t?Object.assign({},e,{index:t.index}):e});this.setState({user_token:t,fetching:n,creating:r,current:o,elements:s,current_product:i,current_product_label:a})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this)),window.addEventListener("mouseup",this.dragEnd.bind(this)),window.addEventListener("mousemove",this.dragOngoing.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_property=t.delete_property=t.new_property=t.fetch_properties=void 0;var r=n(1);t.fetch_properties=function(e,t){return new Promise(function(n,o){(0,r.get_request)("property",[{key:"user_token",value:e},{key:"process_id",value:t},{key:"fields",value:"label,value,process_id,index"}]).then(function(e){n(e)},function(e){o(e)})})},t.new_property=function(e,t,n,o){return new Promise(function(i,a){(0,r.post_request)("property","process_id="+t+"&label="+n+"&value="+o,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){i(e)},function(e){a(e)})})},t.delete_property=function(e,t){return new Promise(function(n,o){(0,r.delete_request)("property","id="+t,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){n(e)},function(e){o(e)})})},t.edit_property=function(e,t,n){return new Promise(function(o,i){(0,r.put_request)("property","id="+t+"&info="+JSON.stringify(n),[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.edit_step=t.delete_step=t.new_step=t.fetch_steps=void 0;var r=n(1);t.fetch_steps=function(e,t){return new Promise(function(n,o){(0,r.get_request)("step",[{key:"user_token",value:e},{key:"process_id",value:t},{key:"fields",value:"label,process_id,index"}]).then(function(e){n(e)},function(e){o(e)})})},t.new_step=function(e,t,n){return new Promise(function(o,i){(0,r.post_request)("step","process_id="+t+"&label="+n,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})},t.delete_step=function(e,t){return new Promise(function(n,o){(0,r.delete_request)("step","id="+t,[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){n(e)},function(e){o(e)})})},t.edit_step=function(e,t,n){return new Promise(function(o,i){(0,r.put_request)("step","id="+t+"&info="+JSON.stringify(n),[{key:"Content-Type",value:"application/x-www-form-urlencoded"}],e).then(function(e){o(e)},function(e){i(e)})})}},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=f(n(0)),a=f(n(5)),l=f(n(40)),u=f(n(41)),s=f(n(42)),c=n(2),d=n(3);function f(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={info:{label:"",desc:""},current:null,editing:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){return i.default.createElement(a.default,{label:"Process Info - "+this.state.info.label,id:"v_process_info",close_callback:this.onClose.bind(this),edit:this.onEdit.bind(this),store:this.props.store,previous_view:"v_products"},i.default.createElement("div",{className:"image"}),i.default.createElement("div",{className:"header"},i.default.createElement("div",{className:"label"},this.state.info.label),i.default.createElement("div",{className:"desc"},this.state.info.desc)),i.default.createElement(l.default,{store:this.props.store}),i.default.createElement(u.default,{store:this.props.store}),i.default.createElement(s.default,{store:this.props.store}))}},{key:"onClose",value:function(e){var t=this;setTimeout(function(){t.props.store.dispatch((0,d.set_current_process)(null))},400)}},{key:"onEdit",value:function(){this.setState({editing:!0})}},{key:"switch",value:function(e){this.props.store.dispatch((0,c.switch_view)(e))}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.processes.current,n=e.processes.elements;if(null!=t){var r=n.find(function(e){return e.id==t});this.setState({info:r,current:t})}}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=p},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=u(n(0)),a=u(n(12)),l=n(7);function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={user_token:null,fetching:!1,creating:!1,elements:[],process_id:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){return i.default.createElement("div",{className:"properties"},i.default.createElement(a.default,{id:"process-properties",params:{label:"Properties",empty_label:"No properties yet"},elements:this.state.elements,addCb:this.add.bind(this),saveCb:this.save.bind(this),removeCb:this.remove.bind(this),fetching:this.state.fetching,creating:this.state.creating}))}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.user.token,n=e.properties.fetching,r=e.properties.creating,o=e.properties.elements,i=e.processes.current;this.setState({user_token:t,fetching:n,creating:r,process_id:i,elements:o.filter(function(e){return e.process_id==i})})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}},{key:"add",value:function(){this.props.store.dispatch((0,l.add_property)(this.state.user_token,this.state.process_id))}},{key:"save",value:function(e,t,n){this.props.store.dispatch((0,l.edit_property)(this.state.user_token,e.id,{label:t,value:n}))}},{key:"remove",value:function(e){this.props.store.dispatch((0,l.remove_property)(this.state.user_token,e.id))}}]),t}();t.default=s},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=u(n(0)),a=u(n(12)),l=n(8);function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={user_token:null,fetching:!1,creating:!1,elements:[],pid:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),o(t,[{key:"render",value:function(){return i.default.createElement("div",{className:"steps"},i.default.createElement(a.default,{id:"process-steps",numbered:!0,single:!0,params:{label:"Guide",empty_label:"Guide empty"},elements:this.state.elements,addCb:this.add.bind(this),saveCb:this.save.bind(this),removeCb:this.remove.bind(this),fetching:this.state.fetching,creating:this.state.creating}))}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.user.token,n=e.steps.fetching,r=e.steps.creating,o=e.steps.elements,i=e.processes.current;this.setState({user_token:t,fetching:n,creating:r,pid:i,elements:o.filter(function(e){return e.pid==i})})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}},{key:"add",value:function(){this.props.store.dispatch((0,l.add_step)(this.state.user_token,this.state.pid))}},{key:"save",value:function(e,t){this.props.store.dispatch((0,l.edit_step)(this.state.user_token,e.id,{label:t}))}},{key:"remove",value:function(e){this.props.store.dispatch((0,l.remove_step)(this.state.user_token,e.id))}}]),t}();t.default=s},function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(t,"__esModule",{value:!0});var o,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),l=(o=a)&&o.__esModule?o:{default:o},u=n(13);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:[],current:null,uid:null},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),i(t,[{key:"render",value:function(){return l.default.createElement("div",{className:"notes",id:"process-notes"},l.default.createElement("div",{className:"add"},l.default.createElement("div",{className:"title"},"New Note",l.default.createElement("div",{className:"submit",onClick:this.submit.bind(this)},"Submit")),l.default.createElement("input",{type:"text",className:"label-field",placeholder:"Label"}),l.default.createElement("textarea",{className:"content-field",placeholder:"Content"})),l.default.createElement("div",{className:"elements"},this.state.elements.map(function(e){return l.default.createElement("div",{className:"element"},l.default.createElement("div",{className:"content"},l.default.createElement("div",{className:"author-image"}),l.default.createElement("div",{className:"label"},e.label),l.default.createElement("div",{className:"author"},"Aske K. Lange"),l.default.createElement("div",{className:"value"},e.content)))})))}},{key:"submit",value:function(){var e=document.querySelectorAll("#process-notes .label-field")[0],t=document.querySelectorAll("#process-notes .content-field")[0];this.props.store.dispatch((0,u.add_note)(this.state.current,this.state.uid,e.value,t.value)),e.value="",t.value=""}},{key:"onStoreChange",value:function(){var e=this.props.store.getState(),t=e.notes.elements,n=e.processes.current,r=e.user.info.id;this.setState({elements:t.filter(function(e){return e.pid==n}).reverse(),current:n,uid:r})}},{key:"componentDidMount",value:function(){this.unsub=this.props.store.subscribe(this.onStoreChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unsub()}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.store=void 0;var r=n(44),o=f(n(47)),i=f(n(48)),a=f(n(49)),l=f(n(50)),u=f(n(51)),s=f(n(52)),c=f(n(53)),d=f(n(54));function f(e){return e&&e.__esModule?e:{default:e}}var p=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__,h=p?p((0,r.applyMiddleware)(o.default)):(0,r.applyMiddleware)(o.default),m=(0,r.combineReducers)({user:i.default,navigation:a.default,products:l.default,processes:u.default,properties:s.default,steps:c.default,notes:d.default}),v=(0,r.createStore)(m,h);t.store=v},function(e,t,n){"use strict";n.r(t),n.d(t,"__DO_NOT_USE__ActionTypes",function(){return i}),n.d(t,"applyMiddleware",function(){return v}),n.d(t,"bindActionCreators",function(){return d}),n.d(t,"combineReducers",function(){return s}),n.d(t,"compose",function(){return m}),n.d(t,"createStore",function(){return l});var r=n(9),o=function(){return Math.random().toString(36).substring(7).split("").join(".")},i={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function a(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function l(e,t,n){var o;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(l)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var u=e,s=t,c=[],d=c,f=!1;function p(){d===c&&(d=c.slice())}function h(){if(f)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return s}function m(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(f)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return p(),d.push(e),function(){if(t){if(f)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,p();var n=d.indexOf(e);d.splice(n,1)}}}function v(e){if(!a(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(f)throw new Error("Reducers may not dispatch actions.");try{f=!0,s=u(s,e)}finally{f=!1}for(var t=c=d,n=0;n<t.length;n++){(0,t[n])()}return e}return v({type:i.INIT}),(o={dispatch:v,subscribe:m,getState:h,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");u=e,v({type:i.REPLACE})}})[r.a]=function(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(h())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e},o}function u(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function s(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var a,l=Object.keys(n);try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:i.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:i.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+i.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){a=e}return function(e,t){if(void 0===e&&(e={}),a)throw a;for(var r=!1,o={},i=0;i<l.length;i++){var s=l[i],c=n[s],d=e[s],f=c(d,t);if(void 0===f){var p=u(s,t);throw new Error(p)}o[s]=f,r=r||f!==d}return r?o:e}}function c(e,t){return function(){return t(e.apply(this,arguments))}}function d(e,t){if("function"==typeof e)return c(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in e){var o=e[r];"function"==typeof o&&(n[r]=c(o,t))}return n}function f(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(n,!0).forEach(function(t){f(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(n).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function m(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}function v(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=t.map(function(e){return e(o)});return h({},n,{dispatch:r=m.apply(void 0,i)(n.dispatch)})}}}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";function r(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}n.r(t);var o=r();o.withExtraArgument=r,t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o={signing_in:!1,failed_sign_in:!1,signed_in:!1,token:null,info:{}};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.INITIATE_SIGN_IN:return Object.assign({},e,{signing_in:!0,failed_sign_in:!1,signed_in:!1});case r.FAIL_SIGN_IN:return Object.assign({},e,{signing_in:!1,failed_sign_in:!0,signed_in:!1});case r.FINALIZE_SIGN_IN:return Object.assign({},e,{signing_in:!1,failed_sign_in:!1,signed_in:!0,token:t.payload.token,info:t.payload.info});case r.SIGN_OUT:return Object.assign({},e,{signed_in:!1,token:null,info:[]});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),o={current_view:"sidebar",current_section:"s_products",views:[],sections:[],current_product:null};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.APPEND_VIEW:return Object.assign({},e,{views:e.views.concat([t.payload.id])});case r.SWITCH_VIEW:return Object.assign({},e,{current_view:t.payload.id});case r.APPEND_SECTION:return Object.assign({},e,{sections:e.sections.concat([t.payload.id])});case r.SWITCH_SECTION:return Object.assign({},e,{current_view:t.payload.id});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(6),o={fetching:!1,creating:!1,current:null,elements:[]};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.INITIATE_FETCH_PRODUCTS:return Object.assign({},e,{fetching:!0});case r.FINALIZE_FETCH_PRODUCTS:return Object.assign({},e,{fetching:!1,elements:t.payload.elements});case r.INITIATE_NEW_PRODUCT:return Object.assign({},e,{creating:!0});case r.FINALIZE_NEW_PRODUCT:return Object.assign({},e,{creating:!1,elements:e.elements.concat([{id:t.payload.id,label:t.payload.label,description:t.payload.description,processes:0}])});case r.REMOVE_PRODUCT:var n=void 0,i=e.elements.concat([]);for(n=0;n<i.length;n++)i[n].id==t.payload.id&&i.splice(n,1);return Object.assign({},e,{elements:i});case r.EDIT_PRODUCT:var a=void 0;for(a=0;a<e.elements.length&&e.elements[a].id!=t.payload.id;a++);var l=e.elements;return l[a]=Object.assign({},e.elements[a],t.payload.info),Object.assign({},e,{elements:l});case r.SET_CURRENT_PRODUCT:return Object.assign({},e,{current:t.payload.id});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o={fetching:!1,creating:!1,current:null,elements:[]};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.INITIATE_FETCH_PROCESSES:return Object.assign({},e,{fetching:!0,elements:[]});case r.FINALIZE_FETCH_PROCESSES:var n=t.payload.elements.map(function(e){return{id:e._id,product_id:e.product_id,label:e.label,desc:e.description,index:null==e.index?"new":e.index}});return Object.assign({},e,{fetching:!1,elements:n});case r.INITIATE_NEW_PROCESS:return Object.assign({},e,{creating:!0});case r.FINALIZE_NEW_PROCESS:return Object.assign({},e,{creating:!1,elements:e.elements.concat([{id:t.payload.id,product_id:t.payload.product_id,label:t.payload.label,desc:t.payload.description,index:t.payload.index}])});case r.REMOVE_PROCESS:for(var i=e.elements.concat([]),a=0;a<i.length;a++)if(i[a].id==t.payload.id){i.splice(a,1);break}return Object.assign({},e,{elements:i});case r.EDIT_PROCESS:var l=void 0,u=e.elements.concat([]);for(l=0;l<u.length;l++)u[l].id==t.payload.id&&(u[l]=Object.assign({},u[l],t.payload.info));return Object.assign({},e,{elements:u});case r.EDIT_PROCESSES:for(var s=e.elements.concat([]),c=function(e){for(var t=0;t<s.length;t++)if(s[t].id==e)return t},d=0;d<t.payload.ids.length;d++){var f=c(t.payload.ids[d]);s[f]=Object.assign(s[f],t.payload.info[d])}return Object.assign({},e,{elements:s});case r.SET_CURRENT_PROCESS:return Object.assign({},e,{current:t.payload.id});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),o={fetching:!1,creating:!1,elements:[]};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.INITIATE_FETCH_PROPERTIES:return Object.assign({},e,{fetching:!0,elements:[]});case r.FINALIZE_FETCH_PROPERTIES:return Object.assign({},e,{fetching:!1,elements:t.payload.elements.map(function(e){return{id:e._id,process_id:e.process_id,label:e.label,value:e.value}})});case r.INITIATE_ADD_PROPERTY:return Object.assign({},e,{creating:!0});case r.FINALIZE_ADD_PROPERTY:return Object.assign({},e,{creating:!1,elements:e.elements.concat([{id:t.payload.id,process_id:t.payload.process_id,label:t.payload.label,value:t.payload.value}])});case r.REMOVE_PROPERTY:for(var n=e.elements.concat([]),i=0;i<n.length;i++)if(n[i].id==t.payload.id){n.splice(i,1);break}return Object.assign({},e,{elements:n});case r.EDIT_PROPERTY:for(var a=e.elements.concat([]),l=0;l<a.length;l++)if(a[l].id==t.payload.id){a[l]=Object.assign(a[l],t.payload.info);break}return Object.assign({},e,{elements:a});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8),o={fetching:!1,creating:!1,elements:[],id_counter:0};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.INITIATE_FETCH_STEPS:return Object.assign({},e,{fetching:!0});case r.FINALIZE_FETCH_STEPS:return Object.assign({},e,{fetching:!1,elements:t.payload.elements.map(function(e){return{id:e._id,pid:e.process_id,label:e.label,index:e.index}})});case r.INITIATE_ADD_STEP:return Object.assign({},e,{creating:!0});case r.FINALIZE_ADD_STEP:return Object.assign({},e,{creating:!1,elements:e.elements.concat([{id:t.payload.id,pid:t.payload.process_id,label:t.payload.label,index:t.payload.index}])});case r.EDIT_STEP:for(var n=e.elements.concat([]),i=0;i<n.length;i++)if(n[i].id==t.payload.id){n[i]=Object.assign(n[i],t.payload.info);break}return Object.assign({},e,{elements:n});case r.REMOVE_STEP:for(var a=e.elements.concat([]),l=0;l<a.length;l++)if(a[l].id==t.payload.id){a.splice(l,1);break}return Object.assign({},e,{elements:a});default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13),o={id_counter:0,elements:[]};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments[1];switch(t.type){case r.ADD_NOTE:return Object.assign({},e,{id_counter:e.id_counter+1,elements:e.elements.concat([{id:e.id_counter,pid:t.payload.pid,uid:t.payload.uid,label:t.payload.label,content:t.payload.content}])});case r.REMOVE_NOTE:for(var n=e.elements.concat([]),i=0;i<n.length;i++)if(n[i].id==t.payload.id){n.splice(i,1);break}return Object.assign({},e,{elements:n});default:return e}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,